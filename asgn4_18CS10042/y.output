Terminals unused in grammar

    SINGLE_COMMENT
    MULTILINE_COMMENT
    AUTO
    ENUM
    REGISTER
    SIGNED
    STRUCT
    TYPEDEF
    UNION
    UNSIGNED
    BOOL
    COMPLEX
    IMAGINARY
    HASH


Grammar

    0 $accept: translation_unit $end

    1 constant: INTEGER
    2         | FLOATING_CONSTANT
    3         | CHARACTER_CONSTANT

    4 primary_expression: IDENTIFIER
    5                   | constant
    6                   | STRING_LITERAL
    7                   | ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE

    8 postfix_expression: primary_expression
    9                   | postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
   10                   | postfix_expression ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE
   11                   | postfix_expression ROUND_BRACKET_OPEN argument_expression_list ROUND_BRACKET_CLOSE
   12                   | postfix_expression DOT IDENTIFIER
   13                   | postfix_expression IMPLIES IDENTIFIER
   14                   | postfix_expression INCREMENT
   15                   | postfix_expression DECREMENT
   16                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

   18 argument_expression_list: assignment_expression
   19                         | argument_expression_list COMMA assignment_expression

   20 unary_expression: postfix_expression
   21                 | INCREMENT unary_expression
   22                 | DECREMENT unary_expression
   23                 | unary_operator cast_expression
   24                 | SIZEOF unary_expression
   25                 | SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

   26 unary_operator: BITWISE_AND
   27               | MUL
   28               | PLUS
   29               | MINUS
   30               | BITWISE_NOT
   31               | NOT

   32 cast_expression: unary_expression
   33                | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression

   34 multiplicative_expression: cast_expression
   35                          | multiplicative_expression MUL cast_expression
   36                          | multiplicative_expression DIV cast_expression
   37                          | multiplicative_expression MOD cast_expression

   38 additive_expression: multiplicative_expression
   39                    | additive_expression PLUS multiplicative_expression
   40                    | additive_expression MINUS multiplicative_expression

   41 shift_expression: additive_expression
   42                 | shift_expression LEFT_SHIFT additive_expression
   43                 | shift_expression RIGHT_SHIFT additive_expression

   44 relational_expression: shift_expression
   45                      | relational_expression LESS_THAN shift_expression
   46                      | relational_expression GREATER_THAN shift_expression
   47                      | relational_expression LESS_EQUAL shift_expression
   48                      | relational_expression GREATER_EQUAL shift_expression

   49 equality_expression: relational_expression
   50                    | equality_expression EQUAL relational_expression
   51                    | equality_expression NOT_EQUAL relational_expression

   52 and_expression: equality_expression
   53               | and_expression BITWISE_AND equality_expression

   54 exclusive_or_expression: and_expression
   55                        | exclusive_or_expression BITWISE_XOR and_expression

   56 inclusive_or_expression: exclusive_or_expression
   57                        | inclusive_or_expression BITWISE_OR exclusive_or_expression

   58 logical_and_expression: inclusive_or_expression
   59                       | logical_and_expression AND inclusive_or_expression

   60 logical_or_expression: logical_and_expression
   61                      | logical_or_expression OR logical_and_expression

   62 conditional_expression: logical_or_expression
   63                       | logical_or_expression QUESTION expression COLON conditional_expression

   64 assignment_expression: conditional_expression
   65                      | unary_expression assignment_operator assignment_expression

   66 assignment_operator: ASSIGN
   67                    | MUL_EQUAL
   68                    | DIV_EQUAL
   69                    | MOD_EQUAL
   70                    | PLUS_EQUAL
   71                    | MINUS_EQUAL
   72                    | SHIFT_LEFT_EQUAL
   73                    | SHIFT_RIGHT_EQUAL
   74                    | BITWISE_AND_EQUAL
   75                    | BITWISE_XOR_EQUAL
   76                    | BITWISE_OR_EQUAL

   77 expression: assignment_expression
   78           | expression COMMA assignment_expression

   79 constant_expression: conditional_expression

   80 declaration: declaration_specifiers SEMICOLON
   81            | declaration_specifiers init_declarator_list SEMICOLON

   82 declaration_specifiers: storage_class_specifier
   83                       | storage_class_specifier declaration_specifiers
   84                       | type_specifier
   85                       | type_specifier declaration_specifiers
   86                       | type_qualifier
   87                       | type_qualifier declaration_specifiers
   88                       | function_specifier
   89                       | function_specifier declaration_specifiers

   90 init_declarator_list: init_declarator
   91                     | init_declarator_list COMMA init_declarator

   92 init_declarator: declarator
   93                | declarator ASSIGN initializer

   94 storage_class_specifier: EXTERN
   95                        | STATIC

   96 type_specifier: VOID
   97               | CHAR
   98               | SHORT
   99               | INT
  100               | LONG
  101               | FLOAT
  102               | DOUBLE

  103 specifier_qualifier_list: type_specifier specifier_qualifier_list
  104                         | type_specifier
  105                         | type_qualifier specifier_qualifier_list
  106                         | type_qualifier

  107 type_qualifier: CONST
  108               | RESTRICT
  109               | VOLATILE

  110 function_specifier: INLINE

  111 declarator: pointer direct_declarator
  112           | direct_declarator

  113 direct_declarator: IDENTIFIER
  114                  | ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE
  115                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt SQUARE_BRACKET_CLOSE
  116                  | direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE
  117                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  118                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt MUL SQUARE_BRACKET_CLOSE
  119                  | direct_declarator ROUND_BRACKET_OPEN parameter_type_list ROUND_BRACKET_CLOSE
  120                  | direct_declarator ROUND_BRACKET_OPEN identifier_list_opt ROUND_BRACKET_CLOSE

  121 type_qualifier_list_opt: %empty
  122                        | type_qualifier_list

  123 assignment_expression_opt: %empty
  124                          | assignment_expression

  125 identifier_list_opt: %empty
  126                    | identifier_list

  127 pointer: MUL type_qualifier_list_opt
  128        | MUL type_qualifier_list_opt pointer

  129 type_qualifier_list: type_qualifier
  130                    | type_qualifier_list type_qualifier

  131 parameter_type_list: parameter_list
  132                    | parameter_list COMMA ELLIPSIS

  133 parameter_list: parameter_declaration
  134               | parameter_list COMMA parameter_declaration

  135 parameter_declaration: declaration_specifiers declarator
  136                      | declaration_specifiers

  137 identifier_list: IDENTIFIER
  138                | identifier_list COMMA IDENTIFIER

  139 type_name: specifier_qualifier_list

  140 initializer: assignment_expression
  141            | CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  142            | CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

  143 initializer_list: designation_opt initializer
  144                 | initializer_list COMMA designation_opt initializer

  145 designation_opt: designation
  146                | %empty

  147 designation: designator_list ASSIGN

  148 designator_list: designator
  149                | designator_list designator

  150 designator: SQUARE_BRACKET_OPEN constant_expression SQUARE_BRACKET_CLOSE
  151           | DOT IDENTIFIER

  152 statement: labeled_statement
  153          | compound_statement
  154          | expression_statement
  155          | selection_statement
  156          | iteration_statement
  157          | jump_statement

  158 labeled_statement: IDENTIFIER COLON statement
  159                  | CASE constant_expression COLON statement
  160                  | DEFAULT COLON statement

  161 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

  162 block_item_list_opt: %empty
  163                    | block_item_list

  164 block_item_list: block_item
  165                | block_item_list block_item

  166 block_item: declaration
  167           | statement

  168 expression_statement: expression_opt SEMICOLON

  169 expression_opt: %empty
  170               | expression

  171 selection_statement: IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement
  172                    | IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement ELSE statement
  173                    | SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

  174 iteration_statement: WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement
  175                    | DO statement WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON
  176                    | FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement
  177                    | FOR ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

  178 jump_statement: GOTO IDENTIFIER SEMICOLON
  179               | CONTINUE SEMICOLON
  180               | BREAK SEMICOLON
  181               | RETURN expression_opt SEMICOLON

  182 translation_unit: external_declaration
  183                 | translation_unit external_declaration

  184 external_declaration: function_definition
  185                     | declaration

  186 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

  187 declaration_list_opt: %empty
  188                     | declaration_list

  189 declaration_list: declaration
  190                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    SINGLE_COMMENT (258)
    MULTILINE_COMMENT (259)
    AUTO (260)
    BREAK (261) 180
    CASE (262) 159
    CHAR (263) 97
    CONST (264) 107
    CONTINUE (265) 179
    DEFAULT (266) 160
    DO (267) 175
    DOUBLE (268) 102
    ELSE (269) 172
    ENUM (270)
    EXTERN (271) 94
    REGISTER (272)
    FLOAT (273) 101
    FOR (274) 176 177
    GOTO (275) 178
    IF (276) 171 172
    INLINE (277) 110
    INT (278) 99
    LONG (279) 100
    RESTRICT (280) 108
    RETURN (281) 181
    SHORT (282) 98
    SIGNED (283)
    SIZEOF (284) 24 25
    STATIC (285) 95 116 117
    STRUCT (286)
    SWITCH (287) 173
    TYPEDEF (288)
    UNION (289)
    UNSIGNED (290)
    VOID (291) 96
    VOLATILE (292) 109
    WHILE (293) 174 175
    BOOL (294)
    COMPLEX (295)
    IMAGINARY (296)
    SQUARE_BRACKET_OPEN (297) 9 115 116 117 118 150
    SQUARE_BRACKET_CLOSE (298) 9 115 116 117 118 150
    ROUND_BRACKET_OPEN (299) 7 10 11 16 17 25 33 114 119 120 171 172 173 174 175 176 177
    ROUND_BRACKET_CLOSE (300) 7 10 11 16 17 25 33 114 119 120 171 172 173 174 175 176 177
    CURLY_BRACKET_OPEN (301) 16 17 141 142 161
    CURLY_BRACKET_CLOSE (302) 16 17 141 142 161
    DOT (303) 12 151
    IMPLIES (304) 13
    INCREMENT (305) 14 21
    DECREMENT (306) 15 22
    BITWISE_AND (307) 26 53
    MUL (308) 27 35 118 127 128
    PLUS (309) 28 39
    MINUS (310) 29 40
    BITWISE_NOT (311) 30
    NOT (312) 31
    DIV (313) 36
    MOD (314) 37
    LEFT_SHIFT (315) 42
    RIGHT_SHIFT (316) 43
    LESS_THAN (317) 45
    GREATER_THAN (318) 46
    LESS_EQUAL (319) 47
    GREATER_EQUAL (320) 48
    EQUAL (321) 50
    NOT_EQUAL (322) 51
    BITWISE_XOR (323) 55
    BITWISE_OR (324) 57
    AND (325) 59
    OR (326) 61
    QUESTION (327) 63
    COLON (328) 63 158 159 160
    SEMICOLON (329) 80 81 168 175 176 177 178 179 180 181
    ELLIPSIS (330) 132
    ASSIGN (331) 66 93 147
    MUL_EQUAL (332) 67
    DIV_EQUAL (333) 68
    MOD_EQUAL (334) 69
    PLUS_EQUAL (335) 70
    MINUS_EQUAL (336) 71
    SHIFT_LEFT_EQUAL (337) 72
    SHIFT_RIGHT_EQUAL (338) 73
    BITWISE_AND_EQUAL (339) 74
    BITWISE_XOR_EQUAL (340) 75
    BITWISE_OR_EQUAL (341) 76
    COMMA (342) 17 19 78 91 132 134 138 142 144
    HASH (343)
    IDENTIFIER (344) 4 12 13 113 137 138 151 158 178
    INTEGER (345) 1
    FLOATING_CONSTANT (346) 2
    CHARACTER_CONSTANT (347) 3
    STRING_LITERAL (348) 6
    THEN (349)


Nonterminals, with rules where they appear

    $accept (95)
        on left: 0
    constant (96)
        on left: 1 2 3
        on right: 5
    primary_expression (97)
        on left: 4 5 6 7
        on right: 8
    postfix_expression (98)
        on left: 8 9 10 11 12 13 14 15 16 17
        on right: 9 10 11 12 13 14 15 20
    argument_expression_list (99)
        on left: 18 19
        on right: 11 19
    unary_expression (100)
        on left: 20 21 22 23 24 25
        on right: 21 22 24 32 65
    unary_operator (101)
        on left: 26 27 28 29 30 31
        on right: 23
    cast_expression (102)
        on left: 32 33
        on right: 23 33 34 35 36 37
    multiplicative_expression (103)
        on left: 34 35 36 37
        on right: 35 36 37 38 39 40
    additive_expression (104)
        on left: 38 39 40
        on right: 39 40 41 42 43
    shift_expression (105)
        on left: 41 42 43
        on right: 42 43 44 45 46 47 48
    relational_expression (106)
        on left: 44 45 46 47 48
        on right: 45 46 47 48 49 50 51
    equality_expression (107)
        on left: 49 50 51
        on right: 50 51 52 53
    and_expression (108)
        on left: 52 53
        on right: 53 54 55
    exclusive_or_expression (109)
        on left: 54 55
        on right: 55 56 57
    inclusive_or_expression (110)
        on left: 56 57
        on right: 57 58 59
    logical_and_expression (111)
        on left: 58 59
        on right: 59 60 61
    logical_or_expression (112)
        on left: 60 61
        on right: 61 62 63
    conditional_expression (113)
        on left: 62 63
        on right: 63 64 79
    assignment_expression (114)
        on left: 64 65
        on right: 18 19 65 77 78 116 117 124 140
    assignment_operator (115)
        on left: 66 67 68 69 70 71 72 73 74 75 76
        on right: 65
    expression (116)
        on left: 77 78
        on right: 7 9 63 78 170 171 172 173 174 175
    constant_expression (117)
        on left: 79
        on right: 150 159
    declaration (118)
        on left: 80 81
        on right: 166 177 185 189 190
    declaration_specifiers (119)
        on left: 82 83 84 85 86 87 88 89
        on right: 80 81 83 85 87 89 135 136 186
    init_declarator_list (120)
        on left: 90 91
        on right: 81 91
    init_declarator (121)
        on left: 92 93
        on right: 90 91
    storage_class_specifier (122)
        on left: 94 95
        on right: 82 83
    type_specifier (123)
        on left: 96 97 98 99 100 101 102
        on right: 84 85 103 104
    specifier_qualifier_list (124)
        on left: 103 104 105 106
        on right: 103 105 139
    type_qualifier (125)
        on left: 107 108 109
        on right: 86 87 105 106 129 130
    function_specifier (126)
        on left: 110
        on right: 88 89
    declarator (127)
        on left: 111 112
        on right: 92 93 114 135 186
    direct_declarator (128)
        on left: 113 114 115 116 117 118 119 120
        on right: 111 112 115 116 117 118 119 120
    type_qualifier_list_opt (129)
        on left: 121 122
        on right: 115 116 118 127 128
    assignment_expression_opt (130)
        on left: 123 124
        on right: 115
    identifier_list_opt (131)
        on left: 125 126
        on right: 120
    pointer (132)
        on left: 127 128
        on right: 111 128
    type_qualifier_list (133)
        on left: 129 130
        on right: 117 122 130
    parameter_type_list (134)
        on left: 131 132
        on right: 119
    parameter_list (135)
        on left: 133 134
        on right: 131 132 134
    parameter_declaration (136)
        on left: 135 136
        on right: 133 134
    identifier_list (137)
        on left: 137 138
        on right: 126 138
    type_name (138)
        on left: 139
        on right: 16 17 25 33
    initializer (139)
        on left: 140 141 142
        on right: 93 143 144
    initializer_list (140)
        on left: 143 144
        on right: 16 17 141 142 144
    designation_opt (141)
        on left: 145 146
        on right: 143 144
    designation (142)
        on left: 147
        on right: 145
    designator_list (143)
        on left: 148 149
        on right: 147 149
    designator (144)
        on left: 150 151
        on right: 148 149
    statement (145)
        on left: 152 153 154 155 156 157
        on right: 158 159 160 167 171 172 173 174 175 176 177
    labeled_statement (146)
        on left: 158 159 160
        on right: 152
    compound_statement (147)
        on left: 161
        on right: 153 186
    block_item_list_opt (148)
        on left: 162 163
        on right: 161
    block_item_list (149)
        on left: 164 165
        on right: 163 165
    block_item (150)
        on left: 166 167
        on right: 164 165
    expression_statement (151)
        on left: 168
        on right: 154
    expression_opt (152)
        on left: 169 170
        on right: 168 176 177 181
    selection_statement (153)
        on left: 171 172 173
        on right: 155
    iteration_statement (154)
        on left: 174 175 176 177
        on right: 156
    jump_statement (155)
        on left: 178 179 180 181
        on right: 157
    translation_unit (156)
        on left: 182 183
        on right: 0 183
    external_declaration (157)
        on left: 184 185
        on right: 182 183
    function_definition (158)
        on left: 186
        on right: 184
    declaration_list_opt (159)
        on left: 187 188
        on right: 186
    declaration_list (160)
        on left: 189 190
        on right: 188 190


State 0

    0 $accept: . translation_unit $end

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    declaration              go to state 14
    declaration_specifiers   go to state 15
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    translation_unit         go to state 20
    external_declaration     go to state 21
    function_definition      go to state 22


State 1

   97 type_specifier: CHAR .

    $default  reduce using rule 97 (type_specifier)


State 2

  107 type_qualifier: CONST .

    $default  reduce using rule 107 (type_qualifier)


State 3

  102 type_specifier: DOUBLE .

    $default  reduce using rule 102 (type_specifier)


State 4

   94 storage_class_specifier: EXTERN .

    $default  reduce using rule 94 (storage_class_specifier)


State 5

  101 type_specifier: FLOAT .

    $default  reduce using rule 101 (type_specifier)


State 6

  110 function_specifier: INLINE .

    $default  reduce using rule 110 (function_specifier)


State 7

   99 type_specifier: INT .

    $default  reduce using rule 99 (type_specifier)


State 8

  100 type_specifier: LONG .

    $default  reduce using rule 100 (type_specifier)


State 9

  108 type_qualifier: RESTRICT .

    $default  reduce using rule 108 (type_qualifier)


State 10

   98 type_specifier: SHORT .

    $default  reduce using rule 98 (type_specifier)


State 11

   95 storage_class_specifier: STATIC .

    $default  reduce using rule 95 (storage_class_specifier)


State 12

   96 type_specifier: VOID .

    $default  reduce using rule 96 (type_specifier)


State 13

  109 type_qualifier: VOLATILE .

    $default  reduce using rule 109 (type_qualifier)


State 14

  185 external_declaration: declaration .

    $default  reduce using rule 185 (external_declaration)


State 15

   80 declaration: declaration_specifiers . SEMICOLON
   81            | declaration_specifiers . init_declarator_list SEMICOLON
  186 function_definition: declaration_specifiers . declarator declaration_list_opt compound_statement

    ROUND_BRACKET_OPEN  shift, and go to state 23
    MUL                 shift, and go to state 24
    SEMICOLON           shift, and go to state 25
    IDENTIFIER          shift, and go to state 26

    init_declarator_list  go to state 27
    init_declarator       go to state 28
    declarator            go to state 29
    direct_declarator     go to state 30
    pointer               go to state 31


State 16

   82 declaration_specifiers: storage_class_specifier .
   83                       | storage_class_specifier . declaration_specifiers

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 82 (declaration_specifiers)

    declaration_specifiers   go to state 32
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19


State 17

   84 declaration_specifiers: type_specifier .
   85                       | type_specifier . declaration_specifiers

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 84 (declaration_specifiers)

    declaration_specifiers   go to state 33
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19


State 18

   86 declaration_specifiers: type_qualifier .
   87                       | type_qualifier . declaration_specifiers

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 86 (declaration_specifiers)

    declaration_specifiers   go to state 34
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19


State 19

   88 declaration_specifiers: function_specifier .
   89                       | function_specifier . declaration_specifiers

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 88 (declaration_specifiers)

    declaration_specifiers   go to state 35
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19


State 20

    0 $accept: translation_unit . $end
  183 translation_unit: translation_unit . external_declaration

    $end      shift, and go to state 36
    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    declaration              go to state 14
    declaration_specifiers   go to state 15
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    external_declaration     go to state 37
    function_definition      go to state 22


State 21

  182 translation_unit: external_declaration .

    $default  reduce using rule 182 (translation_unit)


State 22

  184 external_declaration: function_definition .

    $default  reduce using rule 184 (external_declaration)


State 23

  114 direct_declarator: ROUND_BRACKET_OPEN . declarator ROUND_BRACKET_CLOSE

    ROUND_BRACKET_OPEN  shift, and go to state 23
    MUL                 shift, and go to state 24
    IDENTIFIER          shift, and go to state 26

    declarator         go to state 38
    direct_declarator  go to state 30
    pointer            go to state 31


State 24

  127 pointer: MUL . type_qualifier_list_opt
  128        | MUL . type_qualifier_list_opt pointer

    CONST     shift, and go to state 2
    RESTRICT  shift, and go to state 9
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 121 (type_qualifier_list_opt)

    type_qualifier           go to state 39
    type_qualifier_list_opt  go to state 40
    type_qualifier_list      go to state 41


State 25

   80 declaration: declaration_specifiers SEMICOLON .

    $default  reduce using rule 80 (declaration)


State 26

  113 direct_declarator: IDENTIFIER .

    $default  reduce using rule 113 (direct_declarator)


State 27

   81 declaration: declaration_specifiers init_declarator_list . SEMICOLON
   91 init_declarator_list: init_declarator_list . COMMA init_declarator

    SEMICOLON  shift, and go to state 42
    COMMA      shift, and go to state 43


State 28

   90 init_declarator_list: init_declarator .

    $default  reduce using rule 90 (init_declarator_list)


State 29

   92 init_declarator: declarator .
   93                | declarator . ASSIGN initializer
  186 function_definition: declaration_specifiers declarator . declaration_list_opt compound_statement

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13
    ASSIGN    shift, and go to state 44

    CURLY_BRACKET_OPEN  reduce using rule 187 (declaration_list_opt)
    $default            reduce using rule 92 (init_declarator)

    declaration              go to state 45
    declaration_specifiers   go to state 46
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    declaration_list_opt     go to state 47
    declaration_list         go to state 48


State 30

  112 declarator: direct_declarator .
  115 direct_declarator: direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt SQUARE_BRACKET_CLOSE
  116                  | direct_declarator . SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE
  117                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  118                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list_opt MUL SQUARE_BRACKET_CLOSE
  119                  | direct_declarator . ROUND_BRACKET_OPEN parameter_type_list ROUND_BRACKET_CLOSE
  120                  | direct_declarator . ROUND_BRACKET_OPEN identifier_list_opt ROUND_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 49
    ROUND_BRACKET_OPEN   shift, and go to state 50

    $default  reduce using rule 112 (declarator)


State 31

  111 declarator: pointer . direct_declarator

    ROUND_BRACKET_OPEN  shift, and go to state 23
    IDENTIFIER          shift, and go to state 26

    direct_declarator  go to state 51


State 32

   83 declaration_specifiers: storage_class_specifier declaration_specifiers .

    $default  reduce using rule 83 (declaration_specifiers)


State 33

   85 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 85 (declaration_specifiers)


State 34

   87 declaration_specifiers: type_qualifier declaration_specifiers .

    $default  reduce using rule 87 (declaration_specifiers)


State 35

   89 declaration_specifiers: function_specifier declaration_specifiers .

    $default  reduce using rule 89 (declaration_specifiers)


State 36

    0 $accept: translation_unit $end .

    $default  accept


State 37

  183 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 183 (translation_unit)


State 38

  114 direct_declarator: ROUND_BRACKET_OPEN declarator . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 52


State 39

  129 type_qualifier_list: type_qualifier .

    $default  reduce using rule 129 (type_qualifier_list)


State 40

  127 pointer: MUL type_qualifier_list_opt .
  128        | MUL type_qualifier_list_opt . pointer

    MUL  shift, and go to state 24

    $default  reduce using rule 127 (pointer)

    pointer  go to state 53


State 41

  122 type_qualifier_list_opt: type_qualifier_list .
  130 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 2
    RESTRICT  shift, and go to state 9
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 122 (type_qualifier_list_opt)

    type_qualifier  go to state 54


State 42

   81 declaration: declaration_specifiers init_declarator_list SEMICOLON .

    $default  reduce using rule 81 (declaration)


State 43

   91 init_declarator_list: init_declarator_list COMMA . init_declarator

    ROUND_BRACKET_OPEN  shift, and go to state 23
    MUL                 shift, and go to state 24
    IDENTIFIER          shift, and go to state 26

    init_declarator    go to state 55
    declarator         go to state 56
    direct_declarator  go to state 30
    pointer            go to state 31


State 44

   93 init_declarator: declarator ASSIGN . initializer

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    CURLY_BRACKET_OPEN  shift, and go to state 59
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 90
    initializer                go to state 91


State 45

  189 declaration_list: declaration .

    $default  reduce using rule 189 (declaration_list)


State 46

   80 declaration: declaration_specifiers . SEMICOLON
   81            | declaration_specifiers . init_declarator_list SEMICOLON

    ROUND_BRACKET_OPEN  shift, and go to state 23
    MUL                 shift, and go to state 24
    SEMICOLON           shift, and go to state 25
    IDENTIFIER          shift, and go to state 26

    init_declarator_list  go to state 27
    init_declarator       go to state 28
    declarator            go to state 56
    direct_declarator     go to state 30
    pointer               go to state 31


State 47

  186 function_definition: declaration_specifiers declarator declaration_list_opt . compound_statement

    CURLY_BRACKET_OPEN  shift, and go to state 92

    compound_statement  go to state 93


State 48

  188 declaration_list_opt: declaration_list .
  190 declaration_list: declaration_list . declaration

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 188 (declaration_list_opt)

    declaration              go to state 94
    declaration_specifiers   go to state 46
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19


State 49

  115 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list_opt assignment_expression_opt SQUARE_BRACKET_CLOSE
  116                  | direct_declarator SQUARE_BRACKET_OPEN . STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE
  117                  | direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  118                  | direct_declarator SQUARE_BRACKET_OPEN . type_qualifier_list_opt MUL SQUARE_BRACKET_CLOSE

    CONST     shift, and go to state 2
    RESTRICT  shift, and go to state 9
    STATIC    shift, and go to state 95
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 121 (type_qualifier_list_opt)

    type_qualifier           go to state 39
    type_qualifier_list_opt  go to state 96
    type_qualifier_list      go to state 97


State 50

  119 direct_declarator: direct_declarator ROUND_BRACKET_OPEN . parameter_type_list ROUND_BRACKET_CLOSE
  120                  | direct_declarator ROUND_BRACKET_OPEN . identifier_list_opt ROUND_BRACKET_CLOSE

    CHAR        shift, and go to state 1
    CONST       shift, and go to state 2
    DOUBLE      shift, and go to state 3
    EXTERN      shift, and go to state 4
    FLOAT       shift, and go to state 5
    INLINE      shift, and go to state 6
    INT         shift, and go to state 7
    LONG        shift, and go to state 8
    RESTRICT    shift, and go to state 9
    SHORT       shift, and go to state 10
    STATIC      shift, and go to state 11
    VOID        shift, and go to state 12
    VOLATILE    shift, and go to state 13
    IDENTIFIER  shift, and go to state 98

    $default  reduce using rule 125 (identifier_list_opt)

    declaration_specifiers   go to state 99
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    identifier_list_opt      go to state 100
    parameter_type_list      go to state 101
    parameter_list           go to state 102
    parameter_declaration    go to state 103
    identifier_list          go to state 104


State 51

  111 declarator: pointer direct_declarator .
  115 direct_declarator: direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt SQUARE_BRACKET_CLOSE
  116                  | direct_declarator . SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE
  117                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE
  118                  | direct_declarator . SQUARE_BRACKET_OPEN type_qualifier_list_opt MUL SQUARE_BRACKET_CLOSE
  119                  | direct_declarator . ROUND_BRACKET_OPEN parameter_type_list ROUND_BRACKET_CLOSE
  120                  | direct_declarator . ROUND_BRACKET_OPEN identifier_list_opt ROUND_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 49
    ROUND_BRACKET_OPEN   shift, and go to state 50

    $default  reduce using rule 111 (declarator)


State 52

  114 direct_declarator: ROUND_BRACKET_OPEN declarator ROUND_BRACKET_CLOSE .

    $default  reduce using rule 114 (direct_declarator)


State 53

  128 pointer: MUL type_qualifier_list_opt pointer .

    $default  reduce using rule 128 (pointer)


State 54

  130 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 130 (type_qualifier_list)


State 55

   91 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 91 (init_declarator_list)


State 56

   92 init_declarator: declarator .
   93                | declarator . ASSIGN initializer

    ASSIGN  shift, and go to state 44

    $default  reduce using rule 92 (init_declarator)


State 57

   24 unary_expression: SIZEOF . unary_expression
   25                 | SIZEOF . ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 105
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant            go to state 73
    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 106
    unary_operator      go to state 77


State 58

    7 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
   16 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   33 cast_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE cast_expression

    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    DOUBLE              shift, and go to state 3
    FLOAT               shift, and go to state 5
    INT                 shift, and go to state 7
    LONG                shift, and go to state 8
    RESTRICT            shift, and go to state 9
    SHORT               shift, and go to state 10
    SIZEOF              shift, and go to state 57
    VOID                shift, and go to state 12
    VOLATILE            shift, and go to state 13
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 108
    type_specifier             go to state 109
    specifier_qualifier_list   go to state 110
    type_qualifier             go to state 111
    type_name                  go to state 112


State 59

  141 initializer: CURLY_BRACKET_OPEN . initializer_list CURLY_BRACKET_CLOSE
  142            | CURLY_BRACKET_OPEN . initializer_list COMMA CURLY_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 113
    DOT                  shift, and go to state 114

    $default  reduce using rule 146 (designation_opt)

    initializer_list  go to state 115
    designation_opt   go to state 116
    designation       go to state 117
    designator_list   go to state 118
    designator        go to state 119


State 60

   21 unary_expression: INCREMENT . unary_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 120
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant            go to state 73
    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 121
    unary_operator      go to state 77


State 61

   22 unary_expression: DECREMENT . unary_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 120
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant            go to state 73
    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 122
    unary_operator      go to state 77


State 62

   26 unary_operator: BITWISE_AND .

    $default  reduce using rule 26 (unary_operator)


State 63

   27 unary_operator: MUL .

    $default  reduce using rule 27 (unary_operator)


State 64

   28 unary_operator: PLUS .

    $default  reduce using rule 28 (unary_operator)


State 65

   29 unary_operator: MINUS .

    $default  reduce using rule 29 (unary_operator)


State 66

   30 unary_operator: BITWISE_NOT .

    $default  reduce using rule 30 (unary_operator)


State 67

   31 unary_operator: NOT .

    $default  reduce using rule 31 (unary_operator)


State 68

    4 primary_expression: IDENTIFIER .

    $default  reduce using rule 4 (primary_expression)


State 69

    1 constant: INTEGER .

    $default  reduce using rule 1 (constant)


State 70

    2 constant: FLOATING_CONSTANT .

    $default  reduce using rule 2 (constant)


State 71

    3 constant: CHARACTER_CONSTANT .

    $default  reduce using rule 3 (constant)


State 72

    6 primary_expression: STRING_LITERAL .

    $default  reduce using rule 6 (primary_expression)


State 73

    5 primary_expression: constant .

    $default  reduce using rule 5 (primary_expression)


State 74

    8 postfix_expression: primary_expression .

    $default  reduce using rule 8 (postfix_expression)


State 75

    9 postfix_expression: postfix_expression . SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
   10                   | postfix_expression . ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE
   11                   | postfix_expression . ROUND_BRACKET_OPEN argument_expression_list ROUND_BRACKET_CLOSE
   12                   | postfix_expression . DOT IDENTIFIER
   13                   | postfix_expression . IMPLIES IDENTIFIER
   14                   | postfix_expression . INCREMENT
   15                   | postfix_expression . DECREMENT
   20 unary_expression: postfix_expression .

    SQUARE_BRACKET_OPEN  shift, and go to state 123
    ROUND_BRACKET_OPEN   shift, and go to state 124
    DOT                  shift, and go to state 125
    IMPLIES              shift, and go to state 126
    INCREMENT            shift, and go to state 127
    DECREMENT            shift, and go to state 128

    $default  reduce using rule 20 (unary_expression)


State 76

   32 cast_expression: unary_expression .
   65 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASSIGN             shift, and go to state 129
    MUL_EQUAL          shift, and go to state 130
    DIV_EQUAL          shift, and go to state 131
    MOD_EQUAL          shift, and go to state 132
    PLUS_EQUAL         shift, and go to state 133
    MINUS_EQUAL        shift, and go to state 134
    SHIFT_LEFT_EQUAL   shift, and go to state 135
    SHIFT_RIGHT_EQUAL  shift, and go to state 136
    BITWISE_AND_EQUAL  shift, and go to state 137
    BITWISE_XOR_EQUAL  shift, and go to state 138
    BITWISE_OR_EQUAL   shift, and go to state 139

    $default  reduce using rule 32 (cast_expression)

    assignment_operator  go to state 140


State 77

   23 unary_expression: unary_operator . cast_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant            go to state 73
    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 141
    unary_operator      go to state 77
    cast_expression     go to state 142


State 78

   34 multiplicative_expression: cast_expression .

    $default  reduce using rule 34 (multiplicative_expression)


State 79

   35 multiplicative_expression: multiplicative_expression . MUL cast_expression
   36                          | multiplicative_expression . DIV cast_expression
   37                          | multiplicative_expression . MOD cast_expression
   38 additive_expression: multiplicative_expression .

    MUL  shift, and go to state 143
    DIV  shift, and go to state 144
    MOD  shift, and go to state 145

    $default  reduce using rule 38 (additive_expression)


State 80

   39 additive_expression: additive_expression . PLUS multiplicative_expression
   40                    | additive_expression . MINUS multiplicative_expression
   41 shift_expression: additive_expression .

    PLUS   shift, and go to state 146
    MINUS  shift, and go to state 147

    $default  reduce using rule 41 (shift_expression)


State 81

   42 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   43                 | shift_expression . RIGHT_SHIFT additive_expression
   44 relational_expression: shift_expression .

    LEFT_SHIFT   shift, and go to state 148
    RIGHT_SHIFT  shift, and go to state 149

    $default  reduce using rule 44 (relational_expression)


State 82

   45 relational_expression: relational_expression . LESS_THAN shift_expression
   46                      | relational_expression . GREATER_THAN shift_expression
   47                      | relational_expression . LESS_EQUAL shift_expression
   48                      | relational_expression . GREATER_EQUAL shift_expression
   49 equality_expression: relational_expression .

    LESS_THAN      shift, and go to state 150
    GREATER_THAN   shift, and go to state 151
    LESS_EQUAL     shift, and go to state 152
    GREATER_EQUAL  shift, and go to state 153

    $default  reduce using rule 49 (equality_expression)


State 83

   50 equality_expression: equality_expression . EQUAL relational_expression
   51                    | equality_expression . NOT_EQUAL relational_expression
   52 and_expression: equality_expression .

    EQUAL      shift, and go to state 154
    NOT_EQUAL  shift, and go to state 155

    $default  reduce using rule 52 (and_expression)


State 84

   53 and_expression: and_expression . BITWISE_AND equality_expression
   54 exclusive_or_expression: and_expression .

    BITWISE_AND  shift, and go to state 156

    $default  reduce using rule 54 (exclusive_or_expression)


State 85

   55 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR and_expression
   56 inclusive_or_expression: exclusive_or_expression .

    BITWISE_XOR  shift, and go to state 157

    $default  reduce using rule 56 (inclusive_or_expression)


State 86

   57 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   58 logical_and_expression: inclusive_or_expression .

    BITWISE_OR  shift, and go to state 158

    $default  reduce using rule 58 (logical_and_expression)


State 87

   59 logical_and_expression: logical_and_expression . AND inclusive_or_expression
   60 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 159

    $default  reduce using rule 60 (logical_or_expression)


State 88

   61 logical_or_expression: logical_or_expression . OR logical_and_expression
   62 conditional_expression: logical_or_expression .
   63                       | logical_or_expression . QUESTION expression COLON conditional_expression

    OR        shift, and go to state 160
    QUESTION  shift, and go to state 161

    $default  reduce using rule 62 (conditional_expression)


State 89

   64 assignment_expression: conditional_expression .

    $default  reduce using rule 64 (assignment_expression)


State 90

  140 initializer: assignment_expression .

    $default  reduce using rule 140 (initializer)


State 91

   93 init_declarator: declarator ASSIGN initializer .

    $default  reduce using rule 93 (init_declarator)


State 92

  161 compound_statement: CURLY_BRACKET_OPEN . block_item_list_opt CURLY_BRACKET_CLOSE

    BREAK               shift, and go to state 162
    CASE                shift, and go to state 163
    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    CONTINUE            shift, and go to state 164
    DEFAULT             shift, and go to state 165
    DO                  shift, and go to state 166
    DOUBLE              shift, and go to state 3
    EXTERN              shift, and go to state 4
    FLOAT               shift, and go to state 5
    FOR                 shift, and go to state 167
    GOTO                shift, and go to state 168
    IF                  shift, and go to state 169
    INLINE              shift, and go to state 6
    INT                 shift, and go to state 7
    LONG                shift, and go to state 8
    RESTRICT            shift, and go to state 9
    RETURN              shift, and go to state 170
    SHORT               shift, and go to state 10
    SIZEOF              shift, and go to state 57
    STATIC              shift, and go to state 11
    SWITCH              shift, and go to state 171
    VOID                shift, and go to state 12
    VOLATILE            shift, and go to state 13
    WHILE               shift, and go to state 172
    ROUND_BRACKET_OPEN  shift, and go to state 58
    CURLY_BRACKET_OPEN  shift, and go to state 92
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 173
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    SEMICOLON  reduce using rule 169 (expression_opt)
    $default   reduce using rule 162 (block_item_list_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    declaration                go to state 175
    declaration_specifiers     go to state 46
    storage_class_specifier    go to state 16
    type_specifier             go to state 17
    type_qualifier             go to state 18
    function_specifier         go to state 19
    statement                  go to state 176
    labeled_statement          go to state 177
    compound_statement         go to state 178
    block_item_list_opt        go to state 179
    block_item_list            go to state 180
    block_item                 go to state 181
    expression_statement       go to state 182
    expression_opt             go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186


State 93

  186 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement .

    $default  reduce using rule 186 (function_definition)


State 94

  190 declaration_list: declaration_list declaration .

    $default  reduce using rule 190 (declaration_list)


State 95

  116 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC . type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE

    CONST     shift, and go to state 2
    RESTRICT  shift, and go to state 9
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 121 (type_qualifier_list_opt)

    type_qualifier           go to state 39
    type_qualifier_list_opt  go to state 187
    type_qualifier_list      go to state 41


State 96

  115 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt . assignment_expression_opt SQUARE_BRACKET_CLOSE
  118                  | direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt . MUL SQUARE_BRACKET_CLOSE

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 188
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 123 (assignment_expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 189
    assignment_expression_opt  go to state 190


State 97

  117 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list . STATIC assignment_expression SQUARE_BRACKET_CLOSE
  122 type_qualifier_list_opt: type_qualifier_list .
  130 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 2
    RESTRICT  shift, and go to state 9
    STATIC    shift, and go to state 191
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 122 (type_qualifier_list_opt)

    type_qualifier  go to state 54


State 98

  137 identifier_list: IDENTIFIER .

    $default  reduce using rule 137 (identifier_list)


State 99

  135 parameter_declaration: declaration_specifiers . declarator
  136                      | declaration_specifiers .

    ROUND_BRACKET_OPEN  shift, and go to state 23
    MUL                 shift, and go to state 24
    IDENTIFIER          shift, and go to state 26

    $default  reduce using rule 136 (parameter_declaration)

    declarator         go to state 192
    direct_declarator  go to state 30
    pointer            go to state 31


State 100

  120 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list_opt . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 193


State 101

  119 direct_declarator: direct_declarator ROUND_BRACKET_OPEN parameter_type_list . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 194


State 102

  131 parameter_type_list: parameter_list .
  132                    | parameter_list . COMMA ELLIPSIS
  134 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 195

    $default  reduce using rule 131 (parameter_type_list)


State 103

  133 parameter_list: parameter_declaration .

    $default  reduce using rule 133 (parameter_list)


State 104

  126 identifier_list_opt: identifier_list .
  138 identifier_list: identifier_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 196

    $default  reduce using rule 126 (identifier_list_opt)


State 105

    7 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
   16 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   25 unary_expression: SIZEOF ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE

    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    DOUBLE              shift, and go to state 3
    FLOAT               shift, and go to state 5
    INT                 shift, and go to state 7
    LONG                shift, and go to state 8
    RESTRICT            shift, and go to state 9
    SHORT               shift, and go to state 10
    SIZEOF              shift, and go to state 57
    VOID                shift, and go to state 12
    VOLATILE            shift, and go to state 13
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 108
    type_specifier             go to state 109
    specifier_qualifier_list   go to state 110
    type_qualifier             go to state 111
    type_name                  go to state 197


State 106

   24 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 24 (unary_expression)


State 107

   77 expression: assignment_expression .

    $default  reduce using rule 77 (expression)


State 108

    7 primary_expression: ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE
   78 expression: expression . COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 198
    COMMA                shift, and go to state 199


State 109

  103 specifier_qualifier_list: type_specifier . specifier_qualifier_list
  104                         | type_specifier .

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    FLOAT     shift, and go to state 5
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 104 (specifier_qualifier_list)

    type_specifier            go to state 109
    specifier_qualifier_list  go to state 200
    type_qualifier            go to state 111


State 110

  139 type_name: specifier_qualifier_list .

    $default  reduce using rule 139 (type_name)


State 111

  105 specifier_qualifier_list: type_qualifier . specifier_qualifier_list
  106                         | type_qualifier .

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    FLOAT     shift, and go to state 5
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13

    $default  reduce using rule 106 (specifier_qualifier_list)

    type_specifier            go to state 109
    specifier_qualifier_list  go to state 201
    type_qualifier            go to state 111


State 112

   16 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   33 cast_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE cast_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 202


State 113

  150 designator: SQUARE_BRACKET_OPEN . constant_expression SQUARE_BRACKET_CLOSE

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 203
    constant_expression        go to state 204


State 114

  151 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 205


State 115

  141 initializer: CURLY_BRACKET_OPEN initializer_list . CURLY_BRACKET_CLOSE
  142            | CURLY_BRACKET_OPEN initializer_list . COMMA CURLY_BRACKET_CLOSE
  144 initializer_list: initializer_list . COMMA designation_opt initializer

    CURLY_BRACKET_CLOSE  shift, and go to state 206
    COMMA                shift, and go to state 207


State 116

  143 initializer_list: designation_opt . initializer

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    CURLY_BRACKET_OPEN  shift, and go to state 59
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 90
    initializer                go to state 208


State 117

  145 designation_opt: designation .

    $default  reduce using rule 145 (designation_opt)


State 118

  147 designation: designator_list . ASSIGN
  149 designator_list: designator_list . designator

    SQUARE_BRACKET_OPEN  shift, and go to state 113
    DOT                  shift, and go to state 114
    ASSIGN               shift, and go to state 209

    designator  go to state 210


State 119

  148 designator_list: designator .

    $default  reduce using rule 148 (designator_list)


State 120

    7 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE
   16 postfix_expression: ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN . type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    DOUBLE              shift, and go to state 3
    FLOAT               shift, and go to state 5
    INT                 shift, and go to state 7
    LONG                shift, and go to state 8
    RESTRICT            shift, and go to state 9
    SHORT               shift, and go to state 10
    SIZEOF              shift, and go to state 57
    VOID                shift, and go to state 12
    VOLATILE            shift, and go to state 13
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 108
    type_specifier             go to state 109
    specifier_qualifier_list   go to state 110
    type_qualifier             go to state 111
    type_name                  go to state 211


State 121

   21 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 21 (unary_expression)


State 122

   22 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 22 (unary_expression)


State 123

    9 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN . expression SQUARE_BRACKET_CLOSE

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 212


State 124

   10 postfix_expression: postfix_expression ROUND_BRACKET_OPEN . ROUND_BRACKET_CLOSE
   11                   | postfix_expression ROUND_BRACKET_OPEN . argument_expression_list ROUND_BRACKET_CLOSE

    SIZEOF               shift, and go to state 57
    ROUND_BRACKET_OPEN   shift, and go to state 58
    ROUND_BRACKET_CLOSE  shift, and go to state 213
    INCREMENT            shift, and go to state 60
    DECREMENT            shift, and go to state 61
    BITWISE_AND          shift, and go to state 62
    MUL                  shift, and go to state 63
    PLUS                 shift, and go to state 64
    MINUS                shift, and go to state 65
    BITWISE_NOT          shift, and go to state 66
    NOT                  shift, and go to state 67
    IDENTIFIER           shift, and go to state 68
    INTEGER              shift, and go to state 69
    FLOATING_CONSTANT    shift, and go to state 70
    CHARACTER_CONSTANT   shift, and go to state 71
    STRING_LITERAL       shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    argument_expression_list   go to state 214
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 215


State 125

   12 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 216


State 126

   13 postfix_expression: postfix_expression IMPLIES . IDENTIFIER

    IDENTIFIER  shift, and go to state 217


State 127

   14 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 14 (postfix_expression)


State 128

   15 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 15 (postfix_expression)


State 129

   66 assignment_operator: ASSIGN .

    $default  reduce using rule 66 (assignment_operator)


State 130

   67 assignment_operator: MUL_EQUAL .

    $default  reduce using rule 67 (assignment_operator)


State 131

   68 assignment_operator: DIV_EQUAL .

    $default  reduce using rule 68 (assignment_operator)


State 132

   69 assignment_operator: MOD_EQUAL .

    $default  reduce using rule 69 (assignment_operator)


State 133

   70 assignment_operator: PLUS_EQUAL .

    $default  reduce using rule 70 (assignment_operator)


State 134

   71 assignment_operator: MINUS_EQUAL .

    $default  reduce using rule 71 (assignment_operator)


State 135

   72 assignment_operator: SHIFT_LEFT_EQUAL .

    $default  reduce using rule 72 (assignment_operator)


State 136

   73 assignment_operator: SHIFT_RIGHT_EQUAL .

    $default  reduce using rule 73 (assignment_operator)


State 137

   74 assignment_operator: BITWISE_AND_EQUAL .

    $default  reduce using rule 74 (assignment_operator)


State 138

   75 assignment_operator: BITWISE_XOR_EQUAL .

    $default  reduce using rule 75 (assignment_operator)


State 139

   76 assignment_operator: BITWISE_OR_EQUAL .

    $default  reduce using rule 76 (assignment_operator)


State 140

   65 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 218


State 141

   32 cast_expression: unary_expression .

    $default  reduce using rule 32 (cast_expression)


State 142

   23 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 23 (unary_expression)


State 143

   35 multiplicative_expression: multiplicative_expression MUL . cast_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant            go to state 73
    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 141
    unary_operator      go to state 77
    cast_expression     go to state 219


State 144

   36 multiplicative_expression: multiplicative_expression DIV . cast_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant            go to state 73
    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 141
    unary_operator      go to state 77
    cast_expression     go to state 220


State 145

   37 multiplicative_expression: multiplicative_expression MOD . cast_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant            go to state 73
    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 141
    unary_operator      go to state 77
    cast_expression     go to state 221


State 146

   39 additive_expression: additive_expression PLUS . multiplicative_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 222


State 147

   40 additive_expression: additive_expression MINUS . multiplicative_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 223


State 148

   42 shift_expression: shift_expression LEFT_SHIFT . additive_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 224


State 149

   43 shift_expression: shift_expression RIGHT_SHIFT . additive_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 225


State 150

   45 relational_expression: relational_expression LESS_THAN . shift_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 226


State 151

   46 relational_expression: relational_expression GREATER_THAN . shift_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 227


State 152

   47 relational_expression: relational_expression LESS_EQUAL . shift_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 228


State 153

   48 relational_expression: relational_expression GREATER_EQUAL . shift_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 229


State 154

   50 equality_expression: equality_expression EQUAL . relational_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 230


State 155

   51 equality_expression: equality_expression NOT_EQUAL . relational_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 231


State 156

   53 and_expression: and_expression BITWISE_AND . equality_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 232


State 157

   55 exclusive_or_expression: exclusive_or_expression BITWISE_XOR . and_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 233


State 158

   57 inclusive_or_expression: inclusive_or_expression BITWISE_OR . exclusive_or_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 234


State 159

   59 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 235


State 160

   61 logical_or_expression: logical_or_expression OR . logical_and_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 236


State 161

   63 conditional_expression: logical_or_expression QUESTION . expression COLON conditional_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 237


State 162

  180 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 238


State 163

  159 labeled_statement: CASE . constant_expression COLON statement

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 203
    constant_expression        go to state 239


State 164

  179 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 240


State 165

  160 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 241


State 166

  175 iteration_statement: DO . statement WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    BREAK               shift, and go to state 162
    CASE                shift, and go to state 163
    CONTINUE            shift, and go to state 164
    DEFAULT             shift, and go to state 165
    DO                  shift, and go to state 166
    FOR                 shift, and go to state 167
    GOTO                shift, and go to state 168
    IF                  shift, and go to state 169
    RETURN              shift, and go to state 170
    SIZEOF              shift, and go to state 57
    SWITCH              shift, and go to state 171
    WHILE               shift, and go to state 172
    ROUND_BRACKET_OPEN  shift, and go to state 58
    CURLY_BRACKET_OPEN  shift, and go to state 92
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 173
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 169 (expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    statement                  go to state 242
    labeled_statement          go to state 177
    compound_statement         go to state 178
    expression_statement       go to state 182
    expression_opt             go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186


State 167

  176 iteration_statement: FOR . ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement
  177                    | FOR . ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 243


State 168

  178 jump_statement: GOTO . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 244


State 169

  171 selection_statement: IF . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement
  172                    | IF . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement ELSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 245


State 170

  181 jump_statement: RETURN . expression_opt SEMICOLON

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 169 (expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    expression_opt             go to state 246


State 171

  173 selection_statement: SWITCH . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 247


State 172

  174 iteration_statement: WHILE . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_OPEN  shift, and go to state 248


State 173

    4 primary_expression: IDENTIFIER .
  158 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 249

    $default  reduce using rule 4 (primary_expression)


State 174

   78 expression: expression . COMMA assignment_expression
  170 expression_opt: expression .

    COMMA  shift, and go to state 199

    $default  reduce using rule 170 (expression_opt)


State 175

  166 block_item: declaration .

    $default  reduce using rule 166 (block_item)


State 176

  167 block_item: statement .

    $default  reduce using rule 167 (block_item)


State 177

  152 statement: labeled_statement .

    $default  reduce using rule 152 (statement)


State 178

  153 statement: compound_statement .

    $default  reduce using rule 153 (statement)


State 179

  161 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 250


State 180

  163 block_item_list_opt: block_item_list .
  165 block_item_list: block_item_list . block_item

    BREAK               shift, and go to state 162
    CASE                shift, and go to state 163
    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    CONTINUE            shift, and go to state 164
    DEFAULT             shift, and go to state 165
    DO                  shift, and go to state 166
    DOUBLE              shift, and go to state 3
    EXTERN              shift, and go to state 4
    FLOAT               shift, and go to state 5
    FOR                 shift, and go to state 167
    GOTO                shift, and go to state 168
    IF                  shift, and go to state 169
    INLINE              shift, and go to state 6
    INT                 shift, and go to state 7
    LONG                shift, and go to state 8
    RESTRICT            shift, and go to state 9
    RETURN              shift, and go to state 170
    SHORT               shift, and go to state 10
    SIZEOF              shift, and go to state 57
    STATIC              shift, and go to state 11
    SWITCH              shift, and go to state 171
    VOID                shift, and go to state 12
    VOLATILE            shift, and go to state 13
    WHILE               shift, and go to state 172
    ROUND_BRACKET_OPEN  shift, and go to state 58
    CURLY_BRACKET_OPEN  shift, and go to state 92
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 173
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    SEMICOLON  reduce using rule 169 (expression_opt)
    $default   reduce using rule 163 (block_item_list_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    declaration                go to state 175
    declaration_specifiers     go to state 46
    storage_class_specifier    go to state 16
    type_specifier             go to state 17
    type_qualifier             go to state 18
    function_specifier         go to state 19
    statement                  go to state 176
    labeled_statement          go to state 177
    compound_statement         go to state 178
    block_item                 go to state 251
    expression_statement       go to state 182
    expression_opt             go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186


State 181

  164 block_item_list: block_item .

    $default  reduce using rule 164 (block_item_list)


State 182

  154 statement: expression_statement .

    $default  reduce using rule 154 (statement)


State 183

  168 expression_statement: expression_opt . SEMICOLON

    SEMICOLON  shift, and go to state 252


State 184

  155 statement: selection_statement .

    $default  reduce using rule 155 (statement)


State 185

  156 statement: iteration_statement .

    $default  reduce using rule 156 (statement)


State 186

  157 statement: jump_statement .

    $default  reduce using rule 157 (statement)


State 187

  116 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt . assignment_expression SQUARE_BRACKET_CLOSE

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 253


State 188

   27 unary_operator: MUL .
  118 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt MUL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 254

    $default  reduce using rule 27 (unary_operator)


State 189

  124 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 124 (assignment_expression_opt)


State 190

  115 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 255


State 191

  117 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC . assignment_expression SQUARE_BRACKET_CLOSE

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 256


State 192

  135 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 135 (parameter_declaration)


State 193

  120 direct_declarator: direct_declarator ROUND_BRACKET_OPEN identifier_list_opt ROUND_BRACKET_CLOSE .

    $default  reduce using rule 120 (direct_declarator)


State 194

  119 direct_declarator: direct_declarator ROUND_BRACKET_OPEN parameter_type_list ROUND_BRACKET_CLOSE .

    $default  reduce using rule 119 (direct_declarator)


State 195

  132 parameter_type_list: parameter_list COMMA . ELLIPSIS
  134 parameter_list: parameter_list COMMA . parameter_declaration

    CHAR      shift, and go to state 1
    CONST     shift, and go to state 2
    DOUBLE    shift, and go to state 3
    EXTERN    shift, and go to state 4
    FLOAT     shift, and go to state 5
    INLINE    shift, and go to state 6
    INT       shift, and go to state 7
    LONG      shift, and go to state 8
    RESTRICT  shift, and go to state 9
    SHORT     shift, and go to state 10
    STATIC    shift, and go to state 11
    VOID      shift, and go to state 12
    VOLATILE  shift, and go to state 13
    ELLIPSIS  shift, and go to state 257

    declaration_specifiers   go to state 99
    storage_class_specifier  go to state 16
    type_specifier           go to state 17
    type_qualifier           go to state 18
    function_specifier       go to state 19
    parameter_declaration    go to state 258


State 196

  138 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 259


State 197

   16 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   25 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 260


State 198

    7 primary_expression: ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE .

    $default  reduce using rule 7 (primary_expression)


State 199

   78 expression: expression COMMA . assignment_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 261


State 200

  103 specifier_qualifier_list: type_specifier specifier_qualifier_list .

    $default  reduce using rule 103 (specifier_qualifier_list)


State 201

  105 specifier_qualifier_list: type_qualifier specifier_qualifier_list .

    $default  reduce using rule 105 (specifier_qualifier_list)


State 202

   16 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   33 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . cast_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    CURLY_BRACKET_OPEN  shift, and go to state 262
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant            go to state 73
    primary_expression  go to state 74
    postfix_expression  go to state 75
    unary_expression    go to state 141
    unary_operator      go to state 77
    cast_expression     go to state 263


State 203

   79 constant_expression: conditional_expression .

    $default  reduce using rule 79 (constant_expression)


State 204

  150 designator: SQUARE_BRACKET_OPEN constant_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 264


State 205

  151 designator: DOT IDENTIFIER .

    $default  reduce using rule 151 (designator)


State 206

  141 initializer: CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 141 (initializer)


State 207

  142 initializer: CURLY_BRACKET_OPEN initializer_list COMMA . CURLY_BRACKET_CLOSE
  144 initializer_list: initializer_list COMMA . designation_opt initializer

    SQUARE_BRACKET_OPEN  shift, and go to state 113
    CURLY_BRACKET_CLOSE  shift, and go to state 265
    DOT                  shift, and go to state 114

    $default  reduce using rule 146 (designation_opt)

    designation_opt  go to state 266
    designation      go to state 117
    designator_list  go to state 118
    designator       go to state 119


State 208

  143 initializer_list: designation_opt initializer .

    $default  reduce using rule 143 (initializer_list)


State 209

  147 designation: designator_list ASSIGN .

    $default  reduce using rule 147 (designation)


State 210

  149 designator_list: designator_list designator .

    $default  reduce using rule 149 (designator_list)


State 211

   16 postfix_expression: ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name . ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 267


State 212

    9 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression . SQUARE_BRACKET_CLOSE
   78 expression: expression . COMMA assignment_expression

    SQUARE_BRACKET_CLOSE  shift, and go to state 268
    COMMA                 shift, and go to state 199


State 213

   10 postfix_expression: postfix_expression ROUND_BRACKET_OPEN ROUND_BRACKET_CLOSE .

    $default  reduce using rule 10 (postfix_expression)


State 214

   11 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list . ROUND_BRACKET_CLOSE
   19 argument_expression_list: argument_expression_list . COMMA assignment_expression

    ROUND_BRACKET_CLOSE  shift, and go to state 269
    COMMA                shift, and go to state 270


State 215

   18 argument_expression_list: assignment_expression .

    $default  reduce using rule 18 (argument_expression_list)


State 216

   12 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 12 (postfix_expression)


State 217

   13 postfix_expression: postfix_expression IMPLIES IDENTIFIER .

    $default  reduce using rule 13 (postfix_expression)


State 218

   65 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 65 (assignment_expression)


State 219

   35 multiplicative_expression: multiplicative_expression MUL cast_expression .

    $default  reduce using rule 35 (multiplicative_expression)


State 220

   36 multiplicative_expression: multiplicative_expression DIV cast_expression .

    $default  reduce using rule 36 (multiplicative_expression)


State 221

   37 multiplicative_expression: multiplicative_expression MOD cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


State 222

   35 multiplicative_expression: multiplicative_expression . MUL cast_expression
   36                          | multiplicative_expression . DIV cast_expression
   37                          | multiplicative_expression . MOD cast_expression
   39 additive_expression: additive_expression PLUS multiplicative_expression .

    MUL  shift, and go to state 143
    DIV  shift, and go to state 144
    MOD  shift, and go to state 145

    $default  reduce using rule 39 (additive_expression)


State 223

   35 multiplicative_expression: multiplicative_expression . MUL cast_expression
   36                          | multiplicative_expression . DIV cast_expression
   37                          | multiplicative_expression . MOD cast_expression
   40 additive_expression: additive_expression MINUS multiplicative_expression .

    MUL  shift, and go to state 143
    DIV  shift, and go to state 144
    MOD  shift, and go to state 145

    $default  reduce using rule 40 (additive_expression)


State 224

   39 additive_expression: additive_expression . PLUS multiplicative_expression
   40                    | additive_expression . MINUS multiplicative_expression
   42 shift_expression: shift_expression LEFT_SHIFT additive_expression .

    PLUS   shift, and go to state 146
    MINUS  shift, and go to state 147

    $default  reduce using rule 42 (shift_expression)


State 225

   39 additive_expression: additive_expression . PLUS multiplicative_expression
   40                    | additive_expression . MINUS multiplicative_expression
   43 shift_expression: shift_expression RIGHT_SHIFT additive_expression .

    PLUS   shift, and go to state 146
    MINUS  shift, and go to state 147

    $default  reduce using rule 43 (shift_expression)


State 226

   42 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   43                 | shift_expression . RIGHT_SHIFT additive_expression
   45 relational_expression: relational_expression LESS_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 148
    RIGHT_SHIFT  shift, and go to state 149

    $default  reduce using rule 45 (relational_expression)


State 227

   42 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   43                 | shift_expression . RIGHT_SHIFT additive_expression
   46 relational_expression: relational_expression GREATER_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 148
    RIGHT_SHIFT  shift, and go to state 149

    $default  reduce using rule 46 (relational_expression)


State 228

   42 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   43                 | shift_expression . RIGHT_SHIFT additive_expression
   47 relational_expression: relational_expression LESS_EQUAL shift_expression .

    LEFT_SHIFT   shift, and go to state 148
    RIGHT_SHIFT  shift, and go to state 149

    $default  reduce using rule 47 (relational_expression)


State 229

   42 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   43                 | shift_expression . RIGHT_SHIFT additive_expression
   48 relational_expression: relational_expression GREATER_EQUAL shift_expression .

    LEFT_SHIFT   shift, and go to state 148
    RIGHT_SHIFT  shift, and go to state 149

    $default  reduce using rule 48 (relational_expression)


State 230

   45 relational_expression: relational_expression . LESS_THAN shift_expression
   46                      | relational_expression . GREATER_THAN shift_expression
   47                      | relational_expression . LESS_EQUAL shift_expression
   48                      | relational_expression . GREATER_EQUAL shift_expression
   50 equality_expression: equality_expression EQUAL relational_expression .

    LESS_THAN      shift, and go to state 150
    GREATER_THAN   shift, and go to state 151
    LESS_EQUAL     shift, and go to state 152
    GREATER_EQUAL  shift, and go to state 153

    $default  reduce using rule 50 (equality_expression)


State 231

   45 relational_expression: relational_expression . LESS_THAN shift_expression
   46                      | relational_expression . GREATER_THAN shift_expression
   47                      | relational_expression . LESS_EQUAL shift_expression
   48                      | relational_expression . GREATER_EQUAL shift_expression
   51 equality_expression: equality_expression NOT_EQUAL relational_expression .

    LESS_THAN      shift, and go to state 150
    GREATER_THAN   shift, and go to state 151
    LESS_EQUAL     shift, and go to state 152
    GREATER_EQUAL  shift, and go to state 153

    $default  reduce using rule 51 (equality_expression)


State 232

   50 equality_expression: equality_expression . EQUAL relational_expression
   51                    | equality_expression . NOT_EQUAL relational_expression
   53 and_expression: and_expression BITWISE_AND equality_expression .

    EQUAL      shift, and go to state 154
    NOT_EQUAL  shift, and go to state 155

    $default  reduce using rule 53 (and_expression)


State 233

   53 and_expression: and_expression . BITWISE_AND equality_expression
   55 exclusive_or_expression: exclusive_or_expression BITWISE_XOR and_expression .

    BITWISE_AND  shift, and go to state 156

    $default  reduce using rule 55 (exclusive_or_expression)


State 234

   55 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR and_expression
   57 inclusive_or_expression: inclusive_or_expression BITWISE_OR exclusive_or_expression .

    BITWISE_XOR  shift, and go to state 157

    $default  reduce using rule 57 (inclusive_or_expression)


State 235

   57 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   59 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    BITWISE_OR  shift, and go to state 158

    $default  reduce using rule 59 (logical_and_expression)


State 236

   59 logical_and_expression: logical_and_expression . AND inclusive_or_expression
   61 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 159

    $default  reduce using rule 61 (logical_or_expression)


State 237

   63 conditional_expression: logical_or_expression QUESTION expression . COLON conditional_expression
   78 expression: expression . COMMA assignment_expression

    COLON  shift, and go to state 271
    COMMA  shift, and go to state 199


State 238

  180 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 180 (jump_statement)


State 239

  159 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 272


State 240

  179 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 179 (jump_statement)


State 241

  160 labeled_statement: DEFAULT COLON . statement

    BREAK               shift, and go to state 162
    CASE                shift, and go to state 163
    CONTINUE            shift, and go to state 164
    DEFAULT             shift, and go to state 165
    DO                  shift, and go to state 166
    FOR                 shift, and go to state 167
    GOTO                shift, and go to state 168
    IF                  shift, and go to state 169
    RETURN              shift, and go to state 170
    SIZEOF              shift, and go to state 57
    SWITCH              shift, and go to state 171
    WHILE               shift, and go to state 172
    ROUND_BRACKET_OPEN  shift, and go to state 58
    CURLY_BRACKET_OPEN  shift, and go to state 92
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 173
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 169 (expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    statement                  go to state 273
    labeled_statement          go to state 177
    compound_statement         go to state 178
    expression_statement       go to state 182
    expression_opt             go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186


State 242

  175 iteration_statement: DO statement . WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    WHILE  shift, and go to state 274


State 243

  176 iteration_statement: FOR ROUND_BRACKET_OPEN . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement
  177                    | FOR ROUND_BRACKET_OPEN . declaration expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    CHAR                shift, and go to state 1
    CONST               shift, and go to state 2
    DOUBLE              shift, and go to state 3
    EXTERN              shift, and go to state 4
    FLOAT               shift, and go to state 5
    INLINE              shift, and go to state 6
    INT                 shift, and go to state 7
    LONG                shift, and go to state 8
    RESTRICT            shift, and go to state 9
    SHORT               shift, and go to state 10
    SIZEOF              shift, and go to state 57
    STATIC              shift, and go to state 11
    VOID                shift, and go to state 12
    VOLATILE            shift, and go to state 13
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 169 (expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    declaration                go to state 275
    declaration_specifiers     go to state 46
    storage_class_specifier    go to state 16
    type_specifier             go to state 17
    type_qualifier             go to state 18
    function_specifier         go to state 19
    expression_opt             go to state 276


State 244

  178 jump_statement: GOTO IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 277


State 245

  171 selection_statement: IF ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement
  172                    | IF ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement ELSE statement

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 278


State 246

  181 jump_statement: RETURN expression_opt . SEMICOLON

    SEMICOLON  shift, and go to state 279


State 247

  173 selection_statement: SWITCH ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 280


State 248

  174 iteration_statement: WHILE ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE statement

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 281


State 249

  158 labeled_statement: IDENTIFIER COLON . statement

    BREAK               shift, and go to state 162
    CASE                shift, and go to state 163
    CONTINUE            shift, and go to state 164
    DEFAULT             shift, and go to state 165
    DO                  shift, and go to state 166
    FOR                 shift, and go to state 167
    GOTO                shift, and go to state 168
    IF                  shift, and go to state 169
    RETURN              shift, and go to state 170
    SIZEOF              shift, and go to state 57
    SWITCH              shift, and go to state 171
    WHILE               shift, and go to state 172
    ROUND_BRACKET_OPEN  shift, and go to state 58
    CURLY_BRACKET_OPEN  shift, and go to state 92
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 173
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 169 (expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    statement                  go to state 282
    labeled_statement          go to state 177
    compound_statement         go to state 178
    expression_statement       go to state 182
    expression_opt             go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186


State 250

  161 compound_statement: CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE .

    $default  reduce using rule 161 (compound_statement)


State 251

  165 block_item_list: block_item_list block_item .

    $default  reduce using rule 165 (block_item_list)


State 252

  168 expression_statement: expression_opt SEMICOLON .

    $default  reduce using rule 168 (expression_statement)


State 253

  116 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 283


State 254

  118 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt MUL SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 118 (direct_declarator)


State 255

  115 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list_opt assignment_expression_opt SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 115 (direct_declarator)


State 256

  117 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 284


State 257

  132 parameter_type_list: parameter_list COMMA ELLIPSIS .

    $default  reduce using rule 132 (parameter_type_list)


State 258

  134 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 134 (parameter_list)


State 259

  138 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 138 (identifier_list)


State 260

   16 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   25 unary_expression: SIZEOF ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE .

    CURLY_BRACKET_OPEN  shift, and go to state 262

    $default  reduce using rule 25 (unary_expression)


State 261

   78 expression: expression COMMA assignment_expression .

    $default  reduce using rule 78 (expression)


State 262

   16 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN . initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN . initializer_list COMMA CURLY_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 113
    DOT                  shift, and go to state 114

    $default  reduce using rule 146 (designation_opt)

    initializer_list  go to state 285
    designation_opt   go to state 116
    designation       go to state 117
    designator_list   go to state 118
    designator        go to state 119


State 263

   33 cast_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE cast_expression .

    $default  reduce using rule 33 (cast_expression)


State 264

  150 designator: SQUARE_BRACKET_OPEN constant_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 150 (designator)


State 265

  142 initializer: CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 142 (initializer)


State 266

  144 initializer_list: initializer_list COMMA designation_opt . initializer

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    CURLY_BRACKET_OPEN  shift, and go to state 59
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 90
    initializer                go to state 286


State 267

   16 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE . CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 262


State 268

    9 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 9 (postfix_expression)


State 269

   11 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list ROUND_BRACKET_CLOSE .

    $default  reduce using rule 11 (postfix_expression)


State 270

   19 argument_expression_list: argument_expression_list COMMA . assignment_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 287


State 271

   63 conditional_expression: logical_or_expression QUESTION expression COLON . conditional_expression

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 141
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 288


State 272

  159 labeled_statement: CASE constant_expression COLON . statement

    BREAK               shift, and go to state 162
    CASE                shift, and go to state 163
    CONTINUE            shift, and go to state 164
    DEFAULT             shift, and go to state 165
    DO                  shift, and go to state 166
    FOR                 shift, and go to state 167
    GOTO                shift, and go to state 168
    IF                  shift, and go to state 169
    RETURN              shift, and go to state 170
    SIZEOF              shift, and go to state 57
    SWITCH              shift, and go to state 171
    WHILE               shift, and go to state 172
    ROUND_BRACKET_OPEN  shift, and go to state 58
    CURLY_BRACKET_OPEN  shift, and go to state 92
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 173
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 169 (expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    statement                  go to state 289
    labeled_statement          go to state 177
    compound_statement         go to state 178
    expression_statement       go to state 182
    expression_opt             go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186


State 273

  160 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 160 (labeled_statement)


State 274

  175 iteration_statement: DO statement WHILE . ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_OPEN  shift, and go to state 290


State 275

  177 iteration_statement: FOR ROUND_BRACKET_OPEN declaration . expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 169 (expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    expression_opt             go to state 291


State 276

  176 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    SEMICOLON  shift, and go to state 292


State 277

  178 jump_statement: GOTO IDENTIFIER SEMICOLON .

    $default  reduce using rule 178 (jump_statement)


State 278

   78 expression: expression . COMMA assignment_expression
  171 selection_statement: IF ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement
  172                    | IF ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement ELSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 293
    COMMA                shift, and go to state 199


State 279

  181 jump_statement: RETURN expression_opt SEMICOLON .

    $default  reduce using rule 181 (jump_statement)


State 280

   78 expression: expression . COMMA assignment_expression
  173 selection_statement: SWITCH ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 294
    COMMA                shift, and go to state 199


State 281

   78 expression: expression . COMMA assignment_expression
  174 iteration_statement: WHILE ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 295
    COMMA                shift, and go to state 199


State 282

  158 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 158 (labeled_statement)


State 283

  116 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN STATIC type_qualifier_list_opt assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 116 (direct_declarator)


State 284

  117 direct_declarator: direct_declarator SQUARE_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 117 (direct_declarator)


State 285

   16 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list . CURLY_BRACKET_CLOSE
   17                   | ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list . COMMA CURLY_BRACKET_CLOSE
  144 initializer_list: initializer_list . COMMA designation_opt initializer

    CURLY_BRACKET_CLOSE  shift, and go to state 296
    COMMA                shift, and go to state 297


State 286

  144 initializer_list: initializer_list COMMA designation_opt initializer .

    $default  reduce using rule 144 (initializer_list)


State 287

   19 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 19 (argument_expression_list)


State 288

   63 conditional_expression: logical_or_expression QUESTION expression COLON conditional_expression .

    $default  reduce using rule 63 (conditional_expression)


State 289

  159 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 159 (labeled_statement)


State 290

  175 iteration_statement: DO statement WHILE ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE SEMICOLON

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 298


State 291

  177 iteration_statement: FOR ROUND_BRACKET_OPEN declaration expression_opt . SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    SEMICOLON  shift, and go to state 299


State 292

  176 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 169 (expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    expression_opt             go to state 300


State 293

  171 selection_statement: IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement
  172                    | IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement ELSE statement

    BREAK               shift, and go to state 162
    CASE                shift, and go to state 163
    CONTINUE            shift, and go to state 164
    DEFAULT             shift, and go to state 165
    DO                  shift, and go to state 166
    FOR                 shift, and go to state 167
    GOTO                shift, and go to state 168
    IF                  shift, and go to state 169
    RETURN              shift, and go to state 170
    SIZEOF              shift, and go to state 57
    SWITCH              shift, and go to state 171
    WHILE               shift, and go to state 172
    ROUND_BRACKET_OPEN  shift, and go to state 58
    CURLY_BRACKET_OPEN  shift, and go to state 92
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 173
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 169 (expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    statement                  go to state 301
    labeled_statement          go to state 177
    compound_statement         go to state 178
    expression_statement       go to state 182
    expression_opt             go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186


State 294

  173 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement

    BREAK               shift, and go to state 162
    CASE                shift, and go to state 163
    CONTINUE            shift, and go to state 164
    DEFAULT             shift, and go to state 165
    DO                  shift, and go to state 166
    FOR                 shift, and go to state 167
    GOTO                shift, and go to state 168
    IF                  shift, and go to state 169
    RETURN              shift, and go to state 170
    SIZEOF              shift, and go to state 57
    SWITCH              shift, and go to state 171
    WHILE               shift, and go to state 172
    ROUND_BRACKET_OPEN  shift, and go to state 58
    CURLY_BRACKET_OPEN  shift, and go to state 92
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 173
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 169 (expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    statement                  go to state 302
    labeled_statement          go to state 177
    compound_statement         go to state 178
    expression_statement       go to state 182
    expression_opt             go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186


State 295

  174 iteration_statement: WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . statement

    BREAK               shift, and go to state 162
    CASE                shift, and go to state 163
    CONTINUE            shift, and go to state 164
    DEFAULT             shift, and go to state 165
    DO                  shift, and go to state 166
    FOR                 shift, and go to state 167
    GOTO                shift, and go to state 168
    IF                  shift, and go to state 169
    RETURN              shift, and go to state 170
    SIZEOF              shift, and go to state 57
    SWITCH              shift, and go to state 171
    WHILE               shift, and go to state 172
    ROUND_BRACKET_OPEN  shift, and go to state 58
    CURLY_BRACKET_OPEN  shift, and go to state 92
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 173
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 169 (expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    statement                  go to state 303
    labeled_statement          go to state 177
    compound_statement         go to state 178
    expression_statement       go to state 182
    expression_opt             go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186


State 296

   16 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE .

    $default  reduce using rule 16 (postfix_expression)


State 297

   17 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA . CURLY_BRACKET_CLOSE
  144 initializer_list: initializer_list COMMA . designation_opt initializer

    SQUARE_BRACKET_OPEN  shift, and go to state 113
    CURLY_BRACKET_CLOSE  shift, and go to state 304
    DOT                  shift, and go to state 114

    $default  reduce using rule 146 (designation_opt)

    designation_opt  go to state 266
    designation      go to state 117
    designator_list  go to state 118
    designator       go to state 119


State 298

   78 expression: expression . COMMA assignment_expression
  175 iteration_statement: DO statement WHILE ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE SEMICOLON

    ROUND_BRACKET_CLOSE  shift, and go to state 305
    COMMA                shift, and go to state 199


State 299

  177 iteration_statement: FOR ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON . expression_opt ROUND_BRACKET_CLOSE statement

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 169 (expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    expression_opt             go to state 306


State 300

  176 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement

    SEMICOLON  shift, and go to state 307


State 301

  171 selection_statement: IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement .
  172                    | IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement . ELSE statement

    ELSE  shift, and go to state 308

    $default  reduce using rule 171 (selection_statement)


State 302

  173 selection_statement: SWITCH ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 173 (selection_statement)


State 303

  174 iteration_statement: WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 174 (iteration_statement)


State 304

   17 postfix_expression: ROUND_BRACKET_OPEN type_name ROUND_BRACKET_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE .

    $default  reduce using rule 17 (postfix_expression)


State 305

  175 iteration_statement: DO statement WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 309


State 306

  177 iteration_statement: FOR ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON expression_opt . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 310


State 307

  176 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt ROUND_BRACKET_CLOSE statement

    SIZEOF              shift, and go to state 57
    ROUND_BRACKET_OPEN  shift, and go to state 58
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 68
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 169 (expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    expression_opt             go to state 311


State 308

  172 selection_statement: IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement ELSE . statement

    BREAK               shift, and go to state 162
    CASE                shift, and go to state 163
    CONTINUE            shift, and go to state 164
    DEFAULT             shift, and go to state 165
    DO                  shift, and go to state 166
    FOR                 shift, and go to state 167
    GOTO                shift, and go to state 168
    IF                  shift, and go to state 169
    RETURN              shift, and go to state 170
    SIZEOF              shift, and go to state 57
    SWITCH              shift, and go to state 171
    WHILE               shift, and go to state 172
    ROUND_BRACKET_OPEN  shift, and go to state 58
    CURLY_BRACKET_OPEN  shift, and go to state 92
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 173
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 169 (expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    statement                  go to state 312
    labeled_statement          go to state 177
    compound_statement         go to state 178
    expression_statement       go to state 182
    expression_opt             go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186


State 309

  175 iteration_statement: DO statement WHILE ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE SEMICOLON .

    $default  reduce using rule 175 (iteration_statement)


State 310

  177 iteration_statement: FOR ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE . statement

    BREAK               shift, and go to state 162
    CASE                shift, and go to state 163
    CONTINUE            shift, and go to state 164
    DEFAULT             shift, and go to state 165
    DO                  shift, and go to state 166
    FOR                 shift, and go to state 167
    GOTO                shift, and go to state 168
    IF                  shift, and go to state 169
    RETURN              shift, and go to state 170
    SIZEOF              shift, and go to state 57
    SWITCH              shift, and go to state 171
    WHILE               shift, and go to state 172
    ROUND_BRACKET_OPEN  shift, and go to state 58
    CURLY_BRACKET_OPEN  shift, and go to state 92
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 173
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 169 (expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    statement                  go to state 313
    labeled_statement          go to state 177
    compound_statement         go to state 178
    expression_statement       go to state 182
    expression_opt             go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186


State 311

  176 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . ROUND_BRACKET_CLOSE statement

    ROUND_BRACKET_CLOSE  shift, and go to state 314


State 312

  172 selection_statement: IF ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE statement ELSE statement .

    $default  reduce using rule 172 (selection_statement)


State 313

  177 iteration_statement: FOR ROUND_BRACKET_OPEN declaration expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 177 (iteration_statement)


State 314

  176 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE . statement

    BREAK               shift, and go to state 162
    CASE                shift, and go to state 163
    CONTINUE            shift, and go to state 164
    DEFAULT             shift, and go to state 165
    DO                  shift, and go to state 166
    FOR                 shift, and go to state 167
    GOTO                shift, and go to state 168
    IF                  shift, and go to state 169
    RETURN              shift, and go to state 170
    SIZEOF              shift, and go to state 57
    SWITCH              shift, and go to state 171
    WHILE               shift, and go to state 172
    ROUND_BRACKET_OPEN  shift, and go to state 58
    CURLY_BRACKET_OPEN  shift, and go to state 92
    INCREMENT           shift, and go to state 60
    DECREMENT           shift, and go to state 61
    BITWISE_AND         shift, and go to state 62
    MUL                 shift, and go to state 63
    PLUS                shift, and go to state 64
    MINUS               shift, and go to state 65
    BITWISE_NOT         shift, and go to state 66
    NOT                 shift, and go to state 67
    IDENTIFIER          shift, and go to state 173
    INTEGER             shift, and go to state 69
    FLOATING_CONSTANT   shift, and go to state 70
    CHARACTER_CONSTANT  shift, and go to state 71
    STRING_LITERAL      shift, and go to state 72

    $default  reduce using rule 169 (expression_opt)

    constant                   go to state 73
    primary_expression         go to state 74
    postfix_expression         go to state 75
    unary_expression           go to state 76
    unary_operator             go to state 77
    cast_expression            go to state 78
    multiplicative_expression  go to state 79
    additive_expression        go to state 80
    shift_expression           go to state 81
    relational_expression      go to state 82
    equality_expression        go to state 83
    and_expression             go to state 84
    exclusive_or_expression    go to state 85
    inclusive_or_expression    go to state 86
    logical_and_expression     go to state 87
    logical_or_expression      go to state 88
    conditional_expression     go to state 89
    assignment_expression      go to state 107
    expression                 go to state 174
    statement                  go to state 315
    labeled_statement          go to state 177
    compound_statement         go to state 178
    expression_statement       go to state 182
    expression_opt             go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186


State 315

  176 iteration_statement: FOR ROUND_BRACKET_OPEN expression_opt SEMICOLON expression_opt SEMICOLON expression_opt ROUND_BRACKET_CLOSE statement .

    $default  reduce using rule 176 (iteration_statement)
