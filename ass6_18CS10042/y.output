Terminals unused in grammar

    PUNCTUATOR
    SINGLE_COMMENT
    MULTI_COMMENT
    STRUCT
    UNION
    HASH
    TYPEDEF
    ENUMERATION_CONSTANT
    '+'
    '-'
    '*'
    '/'
    '%'
    UNARY


State 333 conflicts: 1 reduce/reduce


Grammar

    0 $accept: translation_unit $end

    1 M: %empty

    2 N: %empty

    3 primary_expression: IDENTIFIER
    4                   | INTEGER_CONSTANT
    5                   | FLOATING_CONSTANT
    6                   | CHARACTER_CONSTANT
    7                   | STRING_LITERAL
    8                   | RND_OPEN expression RND_CLOSE

    9 postfix_expression: primary_expression
   10                   | postfix_expression SQ_OPEN expression SQ_CLOSE
   11                   | postfix_expression RND_OPEN RND_CLOSE
   12                   | postfix_expression RND_OPEN argument_expression_list_opt RND_CLOSE
   13                   | postfix_expression DOT IDENTIFIER
   14                   | postfix_expression ARROW IDENTIFIER
   15                   | postfix_expression INC
   16                   | postfix_expression DEC
   17                   | RND_OPEN type_name RND_CLOSE CUR_OPEN initializer_list CUR_CLOSE
   18                   | RND_OPEN type_name RND_CLOSE CUR_OPEN initializer_list COMMA CUR_CLOSE

   19 argument_expression_list_opt: argument_expression_list

   20 argument_expression_list: assignment_expression
   21                         | argument_expression_list COMMA assignment_expression

   22 unary_expression: postfix_expression
   23                 | INC unary_expression
   24                 | DEC unary_expression
   25                 | unary_operator cast_expression
   26                 | SIZEOF unary_expression
   27                 | SIZEOF RND_OPEN type_name RND_CLOSE

   28 unary_operator: AMP
   29               | MUL
   30               | ADD
   31               | SUB
   32               | NEG
   33               | EXC

   34 cast_expression: unary_expression
   35                | RND_OPEN type_name RND_CLOSE cast_expression

   36 multiplicative_expression: cast_expression
   37                          | multiplicative_expression MUL cast_expression
   38                          | multiplicative_expression DIV cast_expression
   39                          | multiplicative_expression MOD cast_expression

   40 additive_expression: multiplicative_expression
   41                    | additive_expression ADD multiplicative_expression
   42                    | additive_expression SUB multiplicative_expression

   43 shift_expression: additive_expression
   44                 | shift_expression SHIFT_L additive_expression
   45                 | shift_expression SHIFT_R additive_expression

   46 relational_expression: shift_expression
   47                      | relational_expression LT shift_expression
   48                      | relational_expression GT shift_expression
   49                      | relational_expression LTE shift_expression
   50                      | relational_expression GTE shift_expression

   51 equality_expression: relational_expression
   52                    | equality_expression EQUAL relational_expression
   53                    | equality_expression NOT_EQUAL relational_expression

   54 and_expression: equality_expression
   55               | and_expression AMP equality_expression

   56 exclusive_or_expression: and_expression
   57                        | exclusive_or_expression BIT_XOR and_expression

   58 inclusive_or_expression: exclusive_or_expression
   59                        | inclusive_or_expression BIT_OR exclusive_or_expression

   60 logical_and_expression: inclusive_or_expression
   61                       | logical_and_expression AND M inclusive_or_expression

   62 logical_or_expression: logical_and_expression
   63                      | logical_or_expression OR M logical_and_expression

   64 conditional_expression: logical_or_expression
   65                       | logical_or_expression N QUES M expression N COLON M conditional_expression

   66 assignment_expression: conditional_expression
   67                      | unary_expression assignment_operator assignment_expression

   68 assignment_operator: ASSIGN
   69                    | DIV_ASSIGN
   70                    | MUL_ASSIGN
   71                    | BIT_AND_ASSIGN
   72                    | BIT_XOR_ASSIGN
   73                    | MOD_ASSIGN
   74                    | ADD_ASSIGN
   75                    | SHIFT_L_ASSIGN
   76                    | SHIFT_R_ASSIGN
   77                    | SUB_ASSIGN
   78                    | BIT_OR_ASSIGN

   79 expression: assignment_expression
   80           | expression COMMA assignment_expression

   81 constant_expression: conditional_expression

   82 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON

   83 init_declarator_list_opt: init_declarator_list
   84                         | %empty

   85 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   86                       | type_specifier declaration_specifiers_opt
   87                       | type_qualifier declaration_specifiers_opt
   88                       | function_specifier declaration_specifiers_opt

   89 declaration_specifiers_opt: declaration_specifiers
   90                           | %empty

   91 init_declarator_list: init_declarator
   92                     | init_declarator_list COMMA init_declarator

   93 init_declarator: declarator
   94                | declarator ASSIGN initializer

   95 storage_class_specifier: EXTERN
   96                        | STATIC
   97                        | AUTO
   98                        | REGISTER

   99 type_specifier: DOUBLE
  100               | SIGNED
  101               | VOID
  102               | INT
  103               | LONG
  104               | FLOAT
  105               | CHAR
  106               | SHORT
  107               | UNSIGNED
  108               | _BOOL
  109               | _COMPLEX
  110               | _IMAGINARY
  111               | enum_specifier

  112 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  113                         | type_qualifier specifier_qualifier_list_opt

  114 specifier_qualifier_list_opt: specifier_qualifier_list
  115                             | %empty

  116 enum_specifier: ENUM IDENTIFIER_opt CUR_OPEN enumerator_list CUR_CLOSE
  117               | ENUM IDENTIFIER_opt CUR_OPEN enumerator_list COMMA CUR_CLOSE
  118               | ENUM IDENTIFIER

  119 IDENTIFIER_opt: IDENTIFIER
  120               | %empty

  121 enumerator_list: enumerator
  122                | enumerator_list COMMA enumerator

  123 enumerator: IDENTIFIER
  124           | IDENTIFIER ASSIGN constant_expression

  125 type_qualifier: CONST
  126               | VOLATILE
  127               | RESTRICT

  128 function_specifier: INLINE

  129 declarator: pointer_opt direct_declarator

  130 pointer_opt: pointer
  131            | %empty

  132 direct_declarator: IDENTIFIER
  133                  | RND_OPEN declarator RND_CLOSE
  134                  | direct_declarator SQ_OPEN type_qualifier_list_opt assignment_expression_opt SQ_CLOSE
  135                  | direct_declarator SQ_OPEN STATIC type_qualifier_list_opt assignment_expression SQ_CLOSE
  136                  | direct_declarator SQ_OPEN type_qualifier_list_opt MUL SQ_CLOSE
  137                  | direct_declarator RND_OPEN parameter_type_list RND_CLOSE
  138                  | direct_declarator RND_OPEN identifier_list_opt RND_CLOSE

  139 identifier_list_opt: identifier_list
  140                    | %empty

  141 type_qualifier_list_opt: type_qualifier_list
  142                        | %empty

  143 assignment_expression_opt: %empty
  144                          | assignment_expression

  145 pointer: MUL type_qualifier_list_opt
  146        | MUL type_qualifier_list_opt pointer

  147 type_qualifier_list: type_qualifier
  148                    | type_qualifier_list type_qualifier

  149 parameter_type_list: parameter_list
  150                    | parameter_list COMMA DOTS

  151 parameter_list: parameter_declaration
  152               | parameter_list COMMA parameter_declaration

  153 parameter_declaration: declaration_specifiers declarator
  154                      | declaration_specifiers

  155 identifier_list: IDENTIFIER
  156                | identifier_list COMMA IDENTIFIER

  157 type_name: specifier_qualifier_list

  158 initializer: assignment_expression
  159            | CUR_OPEN initializer_list CUR_CLOSE
  160            | CUR_OPEN initializer_list COMMA CUR_CLOSE

  161 initializer_list: initializer
  162                 | designation initializer
  163                 | initializer_list COMMA initializer
  164                 | initializer_list COMMA designation initializer

  165 designation: designator_list ASSIGN

  166 designator_list: designator
  167                | designator_list designator

  168 designator: SQ_OPEN constant_expression SQ_CLOSE
  169           | DOT IDENTIFIER

  170 statement: labeled_statement
  171          | compound_statement
  172          | expression_statement
  173          | selection_statement
  174          | iteration_statement
  175          | jump_statement

  176 labeled_statement: IDENTIFIER COLON statement
  177                  | CASE constant_expression COLON statement
  178                  | DEFAULT COLON statement

  179 compound_statement: CUR_OPEN CUR_CLOSE
  180                   | CUR_OPEN block_item_list CUR_CLOSE

  181 block_item_list: block_item
  182                | block_item_list M block_item

  183 block_item: declaration
  184           | statement

  185 expression_statement: expression_opt SEMICOLON

  186 expression_opt: expression
  187               | %empty

  188 selection_statement: IF RND_OPEN expression N RND_CLOSE M statement
  189                    | IF RND_OPEN expression N RND_CLOSE M statement N ELSE M statement
  190                    | SWITCH RND_OPEN expression RND_CLOSE statement

  191 iteration_statement: WHILE RND_OPEN M expression N RND_CLOSE M statement
  192                    | DO M statement WHILE RND_OPEN M expression N RND_CLOSE SEMICOLON
  193                    | FOR RND_OPEN expression_opt SEMICOLON M expression_opt N SEMICOLON M expression_opt N RND_CLOSE M statement

  194 jump_statement: GOTO IDENTIFIER SEMICOLON
  195               | CONTINUE SEMICOLON
  196               | BREAK SEMICOLON
  197               | RETURN expression_opt SEMICOLON

  198 translation_unit: external_declaration
  199                 | translation_unit external_declaration

  200 external_declaration: function_definition
  201                     | declaration

  202 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

  203 declaration_list_opt: declaration_list
  204                     | %empty

  205 declaration_list: declaration
  206                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    '%' (37)
    '*' (42)
    '+' (43)
    '-' (45)
    '/' (47)
    error (256)
    CHAR (258) 105
    SHORT (259) 106
    INT (260) 102
    LONG (261) 103
    SIGNED (262) 100
    UNSIGNED (263) 107
    FLOAT (264) 104
    DOUBLE (265) 99
    CONST (266) 125
    VOLATILE (267) 126
    VOID (268) 101
    _BOOL (269) 108
    _COMPLEX (270) 109
    _IMAGINARY (271) 110
    INC (272) 15 23
    DEC (273) 16 24
    ARROW (274) 14
    AMP (275) 28 55
    OR (276) 63
    LTE (277) 49
    GTE (278) 50
    EQUAL (279) 52
    NOT_EQUAL (280) 53
    PUNCTUATOR (281)
    SINGLE_COMMENT (282)
    MULTI_COMMENT (283)
    DIV_ASSIGN (284) 69
    MOD_ASSIGN (285) 73
    BIT_AND_ASSIGN (286) 71
    BIT_XOR_ASSIGN (287) 72
    BIT_OR_ASSIGN (288) 78
    SHIFT_R (289) 45
    SHIFT_L (290) 44
    SQ_OPEN (291) 10 134 135 136 168
    SQ_CLOSE (292) 10 134 135 136 168
    RND_OPEN (293) 8 11 12 17 18 27 35 133 137 138 188 189 190 191 192 193
    RND_CLOSE (294) 8 11 12 17 18 27 35 133 137 138 188 189 190 191 192 193
    CUR_OPEN (295) 17 18 116 117 159 160 179 180
    CUR_CLOSE (296) 17 18 116 117 159 160 179 180
    DOTS (297) 150
    SHIFT_R_ASSIGN (298) 76
    SHIFT_L_ASSIGN (299) 75
    ADD_ASSIGN (300) 74
    SUB_ASSIGN (301) 77
    MUL_ASSIGN (302) 70
    BIT_OR (303) 59
    BIT_XOR (304) 57
    STRUCT (305)
    UNION (306)
    ENUM (307) 116 117 118
    BREAK (308) 196
    CASE (309) 177
    CONTINUE (310) 195
    DEFAULT (311) 178
    DO (312) 192
    IF (313) 188 189
    ELSE (314) 189
    FOR (315) 193
    GOTO (316) 194
    WHILE (317) 191 192
    SWITCH (318) 190
    SIZEOF (319) 26 27
    DOT (320) 13 169
    MUL (321) 29 37 136 145 146
    ADD (322) 30 41
    SUB (323) 31 42
    NEG (324) 32
    EXC (325) 33
    DIV (326) 38
    MOD (327) 39
    LT (328) 47
    GT (329) 48
    QUES (330) 65
    AND (331) 61
    COLON (332) 65 176 177 178
    SEMICOLON (333) 82 185 192 193 194 195 196 197
    ASSIGN (334) 68 94 124 165
    COMMA (335) 18 21 80 92 117 122 150 152 156 160 163 164
    HASH (336)
    TYPEDEF (337)
    EXTERN (338) 95
    STATIC (339) 96 135
    AUTO (340) 97
    REGISTER (341) 98
    INLINE (342) 128
    RESTRICT (343) 127
    RETURN (344) 197
    STRING_LITERAL <strval> (345) 7
    IDENTIFIER <idl> (346) 3 13 14 118 119 123 124 132 155 156 169 176 194
    ENUMERATION_CONSTANT <strval> (347)
    FLOATING_CONSTANT <floatval> (348) 5
    CHARACTER_CONSTANT <charval> (349) 6
    INTEGER_CONSTANT <intval> (350) 4
    UNARY (351)
    IF_CONFLICT (352)


Nonterminals, with rules where they appear

    $accept (103)
        on left: 0
    M <instr> (104)
        on left: 1
        on right: 61 63 65 182 188 189 191 192 193
    N <nextlist> (105)
        on left: 2
        on right: 65 188 189 191 192 193
    primary_expression <expon> (106)
        on left: 3 4 5 6 7 8
        on right: 9
    postfix_expression <expon> (107)
        on left: 9 10 11 12 13 14 15 16 17 18
        on right: 10 11 12 13 14 15 16 22
    argument_expression_list_opt <argsl> (108)
        on left: 19
        on right: 12
    argument_expression_list <argsl> (109)
        on left: 20 21
        on right: 19 21
    unary_expression <expon> (110)
        on left: 22 23 24 25 26 27
        on right: 23 24 26 34 67
    unary_operator <charval> (111)
        on left: 28 29 30 31 32 33
        on right: 25
    cast_expression <expon> (112)
        on left: 34 35
        on right: 25 35 36 37 38 39
    multiplicative_expression <expon> (113)
        on left: 36 37 38 39
        on right: 37 38 39 40 41 42
    additive_expression <expon> (114)
        on left: 40 41 42
        on right: 41 42 43 44 45
    shift_expression <expon> (115)
        on left: 43 44 45
        on right: 44 45 46 47 48 49 50
    relational_expression <expon> (116)
        on left: 46 47 48 49 50
        on right: 47 48 49 50 51 52 53
    equality_expression <expon> (117)
        on left: 51 52 53
        on right: 52 53 54 55
    and_expression <expon> (118)
        on left: 54 55
        on right: 55 56 57
    exclusive_or_expression <expon> (119)
        on left: 56 57
        on right: 57 58 59
    inclusive_or_expression <expon> (120)
        on left: 58 59
        on right: 59 60 61
    logical_and_expression <expon> (121)
        on left: 60 61
        on right: 61 62 63
    logical_or_expression <expon> (122)
        on left: 62 63
        on right: 63 64 65
    conditional_expression <expon> (123)
        on left: 64 65
        on right: 65 66 81
    assignment_expression <expon> (124)
        on left: 66 67
        on right: 20 21 67 79 80 135 144 158
    assignment_operator (125)
        on left: 68 69 70 71 72 73 74 75 76 77 78
        on right: 67
    expression <expon> (126)
        on left: 79 80
        on right: 8 10 65 80 186 188 189 190 191 192
    constant_expression <expon> (127)
        on left: 81
        on right: 124 168 177
    declaration <expon> (128)
        on left: 82
        on right: 183 201 205 206
    init_declarator_list_opt <expon> (129)
        on left: 83 84
        on right: 82
    declaration_specifiers <decl> (130)
        on left: 85 86 87 88
        on right: 82 89 153 154 202
    declaration_specifiers_opt (131)
        on left: 89 90
        on right: 85 86 87 88
    init_declarator_list <expon> (132)
        on left: 91 92
        on right: 83 92
    init_declarator <expon> (133)
        on left: 93 94
        on right: 91 92
    storage_class_specifier (134)
        on left: 95 96 97 98
        on right: 85
    type_specifier <decl> (135)
        on left: 99 100 101 102 103 104 105 106 107 108 109 110 111
        on right: 86 112
    specifier_qualifier_list <decl> (136)
        on left: 112 113
        on right: 114 157
    specifier_qualifier_list_opt (137)
        on left: 114 115
        on right: 112 113
    enum_specifier (138)
        on left: 116 117 118
        on right: 111
    IDENTIFIER_opt <expon> (139)
        on left: 119 120
        on right: 116 117
    enumerator_list (140)
        on left: 121 122
        on right: 116 117 122
    enumerator (141)
        on left: 123 124
        on right: 121 122
    type_qualifier (142)
        on left: 125 126 127
        on right: 87 113 147 148
    function_specifier (143)
        on left: 128
        on right: 88
    declarator <expon> (144)
        on left: 129
        on right: 93 94 133 153 202
    pointer_opt <decl> (145)
        on left: 130 131
        on right: 129
    direct_declarator <expon> (146)
        on left: 132 133 134 135 136 137 138
        on right: 129 134 135 136 137 138
    identifier_list_opt (147)
        on left: 139 140
        on right: 138
    type_qualifier_list_opt (148)
        on left: 141 142
        on right: 134 135 136 145 146
    assignment_expression_opt <expon> (149)
        on left: 143 144
        on right: 134
    pointer <decl> (150)
        on left: 145 146
        on right: 130 146
    type_qualifier_list (151)
        on left: 147 148
        on right: 141 148
    parameter_type_list (152)
        on left: 149 150
        on right: 137
    parameter_list (153)
        on left: 151 152
        on right: 149 150 152
    parameter_declaration (154)
        on left: 153 154
        on right: 151 152
    identifier_list (155)
        on left: 155 156
        on right: 139 156
    type_name <decl> (156)
        on left: 157
        on right: 17 18 27 35
    initializer <expon> (157)
        on left: 158 159 160
        on right: 94 161 162 163 164
    initializer_list (158)
        on left: 161 162 163 164
        on right: 17 18 159 160 163 164
    designation (159)
        on left: 165
        on right: 162 164
    designator_list (160)
        on left: 166 167
        on right: 165 167
    designator (161)
        on left: 168 169
        on right: 166 167
    statement <nextlist> (162)
        on left: 170 171 172 173 174 175
        on right: 176 177 178 184 188 189 190 191 192 193
    labeled_statement <nextlist> (163)
        on left: 176 177 178
        on right: 170
    compound_statement <nextlist> (164)
        on left: 179 180
        on right: 171 202
    block_item_list <nextlist> (165)
        on left: 181 182
        on right: 180 182
    block_item <nextlist> (166)
        on left: 183 184
        on right: 181 182
    expression_statement <expon> (167)
        on left: 185
        on right: 172
    expression_opt <expon> (168)
        on left: 186 187
        on right: 185 193 197
    selection_statement <nextlist> (169)
        on left: 188 189 190
        on right: 173
    iteration_statement <nextlist> (170)
        on left: 191 192 193
        on right: 174
    jump_statement <nextlist> (171)
        on left: 194 195 196 197
        on right: 175
    translation_unit (172)
        on left: 198 199
        on right: 0 199
    external_declaration (173)
        on left: 200 201
        on right: 198 199
    function_definition (174)
        on left: 202
        on right: 200
    declaration_list_opt (175)
        on left: 203 204
        on right: 202
    declaration_list (176)
        on left: 205 206
        on right: 203 206


State 0

    0 $accept: . translation_unit $end

    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    CONST       shift, and go to state 9
    VOLATILE    shift, and go to state 10
    VOID        shift, and go to state 11
    _BOOL       shift, and go to state 12
    _COMPLEX    shift, and go to state 13
    _IMAGINARY  shift, and go to state 14
    ENUM        shift, and go to state 15
    EXTERN      shift, and go to state 16
    STATIC      shift, and go to state 17
    AUTO        shift, and go to state 18
    REGISTER    shift, and go to state 19
    INLINE      shift, and go to state 20
    RESTRICT    shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

  105 type_specifier: CHAR .

    $default  reduce using rule 105 (type_specifier)


State 2

  106 type_specifier: SHORT .

    $default  reduce using rule 106 (type_specifier)


State 3

  102 type_specifier: INT .

    $default  reduce using rule 102 (type_specifier)


State 4

  103 type_specifier: LONG .

    $default  reduce using rule 103 (type_specifier)


State 5

  100 type_specifier: SIGNED .

    $default  reduce using rule 100 (type_specifier)


State 6

  107 type_specifier: UNSIGNED .

    $default  reduce using rule 107 (type_specifier)


State 7

  104 type_specifier: FLOAT .

    $default  reduce using rule 104 (type_specifier)


State 8

   99 type_specifier: DOUBLE .

    $default  reduce using rule 99 (type_specifier)


State 9

  125 type_qualifier: CONST .

    $default  reduce using rule 125 (type_qualifier)


State 10

  126 type_qualifier: VOLATILE .

    $default  reduce using rule 126 (type_qualifier)


State 11

  101 type_specifier: VOID .

    $default  reduce using rule 101 (type_specifier)


State 12

  108 type_specifier: _BOOL .

    $default  reduce using rule 108 (type_specifier)


State 13

  109 type_specifier: _COMPLEX .

    $default  reduce using rule 109 (type_specifier)


State 14

  110 type_specifier: _IMAGINARY .

    $default  reduce using rule 110 (type_specifier)


State 15

  116 enum_specifier: ENUM . IDENTIFIER_opt CUR_OPEN enumerator_list CUR_CLOSE
  117               | ENUM . IDENTIFIER_opt CUR_OPEN enumerator_list COMMA CUR_CLOSE
  118               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 120 (IDENTIFIER_opt)

    IDENTIFIER_opt  go to state 33


State 16

   95 storage_class_specifier: EXTERN .

    $default  reduce using rule 95 (storage_class_specifier)


State 17

   96 storage_class_specifier: STATIC .

    $default  reduce using rule 96 (storage_class_specifier)


State 18

   97 storage_class_specifier: AUTO .

    $default  reduce using rule 97 (storage_class_specifier)


State 19

   98 storage_class_specifier: REGISTER .

    $default  reduce using rule 98 (storage_class_specifier)


State 20

  128 function_specifier: INLINE .

    $default  reduce using rule 128 (function_specifier)


State 21

  127 type_qualifier: RESTRICT .

    $default  reduce using rule 127 (type_qualifier)


State 22

  201 external_declaration: declaration .

    $default  reduce using rule 201 (external_declaration)


State 23

   82 declaration: declaration_specifiers . init_declarator_list_opt SEMICOLON
  202 function_definition: declaration_specifiers . declarator declaration_list_opt compound_statement

    MUL  shift, and go to state 34

    SEMICOLON  reduce using rule 84 (init_declarator_list_opt)
    $default   reduce using rule 131 (pointer_opt)

    init_declarator_list_opt  go to state 35
    init_declarator_list      go to state 36
    init_declarator           go to state 37
    declarator                go to state 38
    pointer_opt               go to state 39
    pointer                   go to state 40


State 24

   85 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    CONST       shift, and go to state 9
    VOLATILE    shift, and go to state 10
    VOID        shift, and go to state 11
    _BOOL       shift, and go to state 12
    _COMPLEX    shift, and go to state 13
    _IMAGINARY  shift, and go to state 14
    ENUM        shift, and go to state 15
    EXTERN      shift, and go to state 16
    STATIC      shift, and go to state 17
    AUTO        shift, and go to state 18
    REGISTER    shift, and go to state 19
    INLINE      shift, and go to state 20
    RESTRICT    shift, and go to state 21

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 42
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 25

   86 declaration_specifiers: type_specifier . declaration_specifiers_opt

    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    CONST       shift, and go to state 9
    VOLATILE    shift, and go to state 10
    VOID        shift, and go to state 11
    _BOOL       shift, and go to state 12
    _COMPLEX    shift, and go to state 13
    _IMAGINARY  shift, and go to state 14
    ENUM        shift, and go to state 15
    EXTERN      shift, and go to state 16
    STATIC      shift, and go to state 17
    AUTO        shift, and go to state 18
    REGISTER    shift, and go to state 19
    INLINE      shift, and go to state 20
    RESTRICT    shift, and go to state 21

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 43
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 26

  111 type_specifier: enum_specifier .

    $default  reduce using rule 111 (type_specifier)


State 27

   87 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    CONST       shift, and go to state 9
    VOLATILE    shift, and go to state 10
    VOID        shift, and go to state 11
    _BOOL       shift, and go to state 12
    _COMPLEX    shift, and go to state 13
    _IMAGINARY  shift, and go to state 14
    ENUM        shift, and go to state 15
    EXTERN      shift, and go to state 16
    STATIC      shift, and go to state 17
    AUTO        shift, and go to state 18
    REGISTER    shift, and go to state 19
    INLINE      shift, and go to state 20
    RESTRICT    shift, and go to state 21

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 44
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 28

   88 declaration_specifiers: function_specifier . declaration_specifiers_opt

    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    CONST       shift, and go to state 9
    VOLATILE    shift, and go to state 10
    VOID        shift, and go to state 11
    _BOOL       shift, and go to state 12
    _COMPLEX    shift, and go to state 13
    _IMAGINARY  shift, and go to state 14
    ENUM        shift, and go to state 15
    EXTERN      shift, and go to state 16
    STATIC      shift, and go to state 17
    AUTO        shift, and go to state 18
    REGISTER    shift, and go to state 19
    INLINE      shift, and go to state 20
    RESTRICT    shift, and go to state 21

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 45
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 29

    0 $accept: translation_unit . $end
  199 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 46
    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    CONST       shift, and go to state 9
    VOLATILE    shift, and go to state 10
    VOID        shift, and go to state 11
    _BOOL       shift, and go to state 12
    _COMPLEX    shift, and go to state 13
    _IMAGINARY  shift, and go to state 14
    ENUM        shift, and go to state 15
    EXTERN      shift, and go to state 16
    STATIC      shift, and go to state 17
    AUTO        shift, and go to state 18
    REGISTER    shift, and go to state 19
    INLINE      shift, and go to state 20
    RESTRICT    shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 47
    function_definition      go to state 31


State 30

  198 translation_unit: external_declaration .

    $default  reduce using rule 198 (translation_unit)


State 31

  200 external_declaration: function_definition .

    $default  reduce using rule 200 (external_declaration)


State 32

  118 enum_specifier: ENUM IDENTIFIER .
  119 IDENTIFIER_opt: IDENTIFIER .

    CUR_OPEN  reduce using rule 119 (IDENTIFIER_opt)
    $default  reduce using rule 118 (enum_specifier)


State 33

  116 enum_specifier: ENUM IDENTIFIER_opt . CUR_OPEN enumerator_list CUR_CLOSE
  117               | ENUM IDENTIFIER_opt . CUR_OPEN enumerator_list COMMA CUR_CLOSE

    CUR_OPEN  shift, and go to state 48


State 34

  145 pointer: MUL . type_qualifier_list_opt
  146        | MUL . type_qualifier_list_opt pointer

    CONST     shift, and go to state 9
    VOLATILE  shift, and go to state 10
    RESTRICT  shift, and go to state 21

    $default  reduce using rule 142 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 50
    type_qualifier_list      go to state 51


State 35

   82 declaration: declaration_specifiers init_declarator_list_opt . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 36

   83 init_declarator_list_opt: init_declarator_list .
   92 init_declarator_list: init_declarator_list . COMMA init_declarator

    COMMA  shift, and go to state 53

    $default  reduce using rule 83 (init_declarator_list_opt)


State 37

   91 init_declarator_list: init_declarator .

    $default  reduce using rule 91 (init_declarator_list)


State 38

   93 init_declarator: declarator .
   94                | declarator . ASSIGN initializer
  202 function_definition: declaration_specifiers declarator . declaration_list_opt compound_statement

    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    CONST       shift, and go to state 9
    VOLATILE    shift, and go to state 10
    VOID        shift, and go to state 11
    _BOOL       shift, and go to state 12
    _COMPLEX    shift, and go to state 13
    _IMAGINARY  shift, and go to state 14
    ENUM        shift, and go to state 15
    ASSIGN      shift, and go to state 54
    EXTERN      shift, and go to state 16
    STATIC      shift, and go to state 17
    AUTO        shift, and go to state 18
    REGISTER    shift, and go to state 19
    INLINE      shift, and go to state 20
    RESTRICT    shift, and go to state 21

    CUR_OPEN  reduce using rule 204 (declaration_list_opt)
    $default  reduce using rule 93 (init_declarator)

    declaration              go to state 55
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    declaration_list_opt     go to state 57
    declaration_list         go to state 58


State 39

  129 declarator: pointer_opt . direct_declarator

    RND_OPEN    shift, and go to state 59
    IDENTIFIER  shift, and go to state 60

    direct_declarator  go to state 61


State 40

  130 pointer_opt: pointer .

    $default  reduce using rule 130 (pointer_opt)


State 41

   89 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 89 (declaration_specifiers_opt)


State 42

   85 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 85 (declaration_specifiers)


State 43

   86 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 86 (declaration_specifiers)


State 44

   87 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 87 (declaration_specifiers)


State 45

   88 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 88 (declaration_specifiers)


State 46

    0 $accept: translation_unit $end .

    $default  accept


State 47

  199 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 199 (translation_unit)


State 48

  116 enum_specifier: ENUM IDENTIFIER_opt CUR_OPEN . enumerator_list CUR_CLOSE
  117               | ENUM IDENTIFIER_opt CUR_OPEN . enumerator_list COMMA CUR_CLOSE

    IDENTIFIER  shift, and go to state 62

    enumerator_list  go to state 63
    enumerator       go to state 64


State 49

  147 type_qualifier_list: type_qualifier .

    $default  reduce using rule 147 (type_qualifier_list)


State 50

  145 pointer: MUL type_qualifier_list_opt .
  146        | MUL type_qualifier_list_opt . pointer

    MUL  shift, and go to state 34

    $default  reduce using rule 145 (pointer)

    pointer  go to state 65


State 51

  141 type_qualifier_list_opt: type_qualifier_list .
  148 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 9
    VOLATILE  shift, and go to state 10
    RESTRICT  shift, and go to state 21

    $default  reduce using rule 141 (type_qualifier_list_opt)

    type_qualifier  go to state 66


State 52

   82 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON .

    $default  reduce using rule 82 (declaration)


State 53

   92 init_declarator_list: init_declarator_list COMMA . init_declarator

    MUL  shift, and go to state 34

    $default  reduce using rule 131 (pointer_opt)

    init_declarator  go to state 67
    declarator       go to state 68
    pointer_opt      go to state 39
    pointer          go to state 40


State 54

   94 init_declarator: declarator ASSIGN . initializer

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 73
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 101
    initializer                go to state 102


State 55

  205 declaration_list: declaration .

    $default  reduce using rule 205 (declaration_list)


State 56

   82 declaration: declaration_specifiers . init_declarator_list_opt SEMICOLON

    MUL  shift, and go to state 34

    SEMICOLON  reduce using rule 84 (init_declarator_list_opt)
    $default   reduce using rule 131 (pointer_opt)

    init_declarator_list_opt  go to state 35
    init_declarator_list      go to state 36
    init_declarator           go to state 37
    declarator                go to state 68
    pointer_opt               go to state 39
    pointer                   go to state 40


State 57

  202 function_definition: declaration_specifiers declarator declaration_list_opt . compound_statement

    CUR_OPEN  shift, and go to state 103

    compound_statement  go to state 104


State 58

  203 declaration_list_opt: declaration_list .
  206 declaration_list: declaration_list . declaration

    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    CONST       shift, and go to state 9
    VOLATILE    shift, and go to state 10
    VOID        shift, and go to state 11
    _BOOL       shift, and go to state 12
    _COMPLEX    shift, and go to state 13
    _IMAGINARY  shift, and go to state 14
    ENUM        shift, and go to state 15
    EXTERN      shift, and go to state 16
    STATIC      shift, and go to state 17
    AUTO        shift, and go to state 18
    REGISTER    shift, and go to state 19
    INLINE      shift, and go to state 20
    RESTRICT    shift, and go to state 21

    $default  reduce using rule 203 (declaration_list_opt)

    declaration              go to state 105
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 59

  133 direct_declarator: RND_OPEN . declarator RND_CLOSE

    MUL  shift, and go to state 34

    $default  reduce using rule 131 (pointer_opt)

    declarator   go to state 106
    pointer_opt  go to state 39
    pointer      go to state 40


State 60

  132 direct_declarator: IDENTIFIER .

    $default  reduce using rule 132 (direct_declarator)


State 61

  129 declarator: pointer_opt direct_declarator .
  134 direct_declarator: direct_declarator . SQ_OPEN type_qualifier_list_opt assignment_expression_opt SQ_CLOSE
  135                  | direct_declarator . SQ_OPEN STATIC type_qualifier_list_opt assignment_expression SQ_CLOSE
  136                  | direct_declarator . SQ_OPEN type_qualifier_list_opt MUL SQ_CLOSE
  137                  | direct_declarator . RND_OPEN parameter_type_list RND_CLOSE
  138                  | direct_declarator . RND_OPEN identifier_list_opt RND_CLOSE

    SQ_OPEN   shift, and go to state 107
    RND_OPEN  shift, and go to state 108

    $default  reduce using rule 129 (declarator)


State 62

  123 enumerator: IDENTIFIER .
  124           | IDENTIFIER . ASSIGN constant_expression

    ASSIGN  shift, and go to state 109

    $default  reduce using rule 123 (enumerator)


State 63

  116 enum_specifier: ENUM IDENTIFIER_opt CUR_OPEN enumerator_list . CUR_CLOSE
  117               | ENUM IDENTIFIER_opt CUR_OPEN enumerator_list . COMMA CUR_CLOSE
  122 enumerator_list: enumerator_list . COMMA enumerator

    CUR_CLOSE  shift, and go to state 110
    COMMA      shift, and go to state 111


State 64

  121 enumerator_list: enumerator .

    $default  reduce using rule 121 (enumerator_list)


State 65

  146 pointer: MUL type_qualifier_list_opt pointer .

    $default  reduce using rule 146 (pointer)


State 66

  148 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 148 (type_qualifier_list)


State 67

   92 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 92 (init_declarator_list)


State 68

   93 init_declarator: declarator .
   94                | declarator . ASSIGN initializer

    ASSIGN  shift, and go to state 54

    $default  reduce using rule 93 (init_declarator)


State 69

   23 unary_expression: INC . unary_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 112
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 113
    unary_operator      go to state 88


State 70

   24 unary_expression: DEC . unary_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 112
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 114
    unary_operator      go to state 88


State 71

   28 unary_operator: AMP .

    $default  reduce using rule 28 (unary_operator)


State 72

    8 primary_expression: RND_OPEN . expression RND_CLOSE
   17 postfix_expression: RND_OPEN . type_name RND_CLOSE CUR_OPEN initializer_list CUR_CLOSE
   18                   | RND_OPEN . type_name RND_CLOSE CUR_OPEN initializer_list COMMA CUR_CLOSE
   35 cast_expression: RND_OPEN . type_name RND_CLOSE cast_expression

    CHAR                shift, and go to state 1
    SHORT               shift, and go to state 2
    INT                 shift, and go to state 3
    LONG                shift, and go to state 4
    SIGNED              shift, and go to state 5
    UNSIGNED            shift, and go to state 6
    FLOAT               shift, and go to state 7
    DOUBLE              shift, and go to state 8
    CONST               shift, and go to state 9
    VOLATILE            shift, and go to state 10
    VOID                shift, and go to state 11
    _BOOL               shift, and go to state 12
    _COMPLEX            shift, and go to state 13
    _IMAGINARY          shift, and go to state 14
    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    ENUM                shift, and go to state 15
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    RESTRICT            shift, and go to state 21
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 116
    type_specifier             go to state 117
    specifier_qualifier_list   go to state 118
    enum_specifier             go to state 26
    type_qualifier             go to state 119
    type_name                  go to state 120


State 73

  159 initializer: CUR_OPEN . initializer_list CUR_CLOSE
  160            | CUR_OPEN . initializer_list COMMA CUR_CLOSE

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    SQ_OPEN             shift, and go to state 121
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 73
    SIZEOF              shift, and go to state 74
    DOT                 shift, and go to state 122
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 101
    initializer                go to state 123
    initializer_list           go to state 124
    designation                go to state 125
    designator_list            go to state 126
    designator                 go to state 127


State 74

   26 unary_expression: SIZEOF . unary_expression
   27                 | SIZEOF . RND_OPEN type_name RND_CLOSE

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 128
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 129
    unary_operator      go to state 88


State 75

   29 unary_operator: MUL .

    $default  reduce using rule 29 (unary_operator)


State 76

   30 unary_operator: ADD .

    $default  reduce using rule 30 (unary_operator)


State 77

   31 unary_operator: SUB .

    $default  reduce using rule 31 (unary_operator)


State 78

   32 unary_operator: NEG .

    $default  reduce using rule 32 (unary_operator)


State 79

   33 unary_operator: EXC .

    $default  reduce using rule 33 (unary_operator)


State 80

    7 primary_expression: STRING_LITERAL .

    $default  reduce using rule 7 (primary_expression)


State 81

    3 primary_expression: IDENTIFIER .

    $default  reduce using rule 3 (primary_expression)


State 82

    5 primary_expression: FLOATING_CONSTANT .

    $default  reduce using rule 5 (primary_expression)


State 83

    6 primary_expression: CHARACTER_CONSTANT .

    $default  reduce using rule 6 (primary_expression)


State 84

    4 primary_expression: INTEGER_CONSTANT .

    $default  reduce using rule 4 (primary_expression)


State 85

    9 postfix_expression: primary_expression .

    $default  reduce using rule 9 (postfix_expression)


State 86

   10 postfix_expression: postfix_expression . SQ_OPEN expression SQ_CLOSE
   11                   | postfix_expression . RND_OPEN RND_CLOSE
   12                   | postfix_expression . RND_OPEN argument_expression_list_opt RND_CLOSE
   13                   | postfix_expression . DOT IDENTIFIER
   14                   | postfix_expression . ARROW IDENTIFIER
   15                   | postfix_expression . INC
   16                   | postfix_expression . DEC
   22 unary_expression: postfix_expression .

    INC       shift, and go to state 130
    DEC       shift, and go to state 131
    ARROW     shift, and go to state 132
    SQ_OPEN   shift, and go to state 133
    RND_OPEN  shift, and go to state 134
    DOT       shift, and go to state 135

    $default  reduce using rule 22 (unary_expression)


State 87

   34 cast_expression: unary_expression .
   67 assignment_expression: unary_expression . assignment_operator assignment_expression

    DIV_ASSIGN      shift, and go to state 136
    MOD_ASSIGN      shift, and go to state 137
    BIT_AND_ASSIGN  shift, and go to state 138
    BIT_XOR_ASSIGN  shift, and go to state 139
    BIT_OR_ASSIGN   shift, and go to state 140
    SHIFT_R_ASSIGN  shift, and go to state 141
    SHIFT_L_ASSIGN  shift, and go to state 142
    ADD_ASSIGN      shift, and go to state 143
    SUB_ASSIGN      shift, and go to state 144
    MUL_ASSIGN      shift, and go to state 145
    ASSIGN          shift, and go to state 146

    $default  reduce using rule 34 (cast_expression)

    assignment_operator  go to state 147


State 88

   25 unary_expression: unary_operator . cast_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 148
    unary_operator      go to state 88
    cast_expression     go to state 149


State 89

   36 multiplicative_expression: cast_expression .

    $default  reduce using rule 36 (multiplicative_expression)


State 90

   37 multiplicative_expression: multiplicative_expression . MUL cast_expression
   38                          | multiplicative_expression . DIV cast_expression
   39                          | multiplicative_expression . MOD cast_expression
   40 additive_expression: multiplicative_expression .

    MUL  shift, and go to state 150
    DIV  shift, and go to state 151
    MOD  shift, and go to state 152

    $default  reduce using rule 40 (additive_expression)


State 91

   41 additive_expression: additive_expression . ADD multiplicative_expression
   42                    | additive_expression . SUB multiplicative_expression
   43 shift_expression: additive_expression .

    ADD  shift, and go to state 153
    SUB  shift, and go to state 154

    $default  reduce using rule 43 (shift_expression)


State 92

   44 shift_expression: shift_expression . SHIFT_L additive_expression
   45                 | shift_expression . SHIFT_R additive_expression
   46 relational_expression: shift_expression .

    SHIFT_R  shift, and go to state 155
    SHIFT_L  shift, and go to state 156

    $default  reduce using rule 46 (relational_expression)


State 93

   47 relational_expression: relational_expression . LT shift_expression
   48                      | relational_expression . GT shift_expression
   49                      | relational_expression . LTE shift_expression
   50                      | relational_expression . GTE shift_expression
   51 equality_expression: relational_expression .

    LTE  shift, and go to state 157
    GTE  shift, and go to state 158
    LT   shift, and go to state 159
    GT   shift, and go to state 160

    $default  reduce using rule 51 (equality_expression)


State 94

   52 equality_expression: equality_expression . EQUAL relational_expression
   53                    | equality_expression . NOT_EQUAL relational_expression
   54 and_expression: equality_expression .

    EQUAL      shift, and go to state 161
    NOT_EQUAL  shift, and go to state 162

    $default  reduce using rule 54 (and_expression)


State 95

   55 and_expression: and_expression . AMP equality_expression
   56 exclusive_or_expression: and_expression .

    AMP  shift, and go to state 163

    $default  reduce using rule 56 (exclusive_or_expression)


State 96

   57 exclusive_or_expression: exclusive_or_expression . BIT_XOR and_expression
   58 inclusive_or_expression: exclusive_or_expression .

    BIT_XOR  shift, and go to state 164

    $default  reduce using rule 58 (inclusive_or_expression)


State 97

   59 inclusive_or_expression: inclusive_or_expression . BIT_OR exclusive_or_expression
   60 logical_and_expression: inclusive_or_expression .

    BIT_OR  shift, and go to state 165

    $default  reduce using rule 60 (logical_and_expression)


State 98

   61 logical_and_expression: logical_and_expression . AND M inclusive_or_expression
   62 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 166

    $default  reduce using rule 62 (logical_or_expression)


State 99

   63 logical_or_expression: logical_or_expression . OR M logical_and_expression
   64 conditional_expression: logical_or_expression .
   65                       | logical_or_expression . N QUES M expression N COLON M conditional_expression

    OR  shift, and go to state 167

    QUES      reduce using rule 2 (N)
    $default  reduce using rule 64 (conditional_expression)

    N  go to state 168


State 100

   66 assignment_expression: conditional_expression .

    $default  reduce using rule 66 (assignment_expression)


State 101

  158 initializer: assignment_expression .

    $default  reduce using rule 158 (initializer)


State 102

   94 init_declarator: declarator ASSIGN initializer .

    $default  reduce using rule 94 (init_declarator)


State 103

  179 compound_statement: CUR_OPEN . CUR_CLOSE
  180                   | CUR_OPEN . block_item_list CUR_CLOSE

    CHAR                shift, and go to state 1
    SHORT               shift, and go to state 2
    INT                 shift, and go to state 3
    LONG                shift, and go to state 4
    SIGNED              shift, and go to state 5
    UNSIGNED            shift, and go to state 6
    FLOAT               shift, and go to state 7
    DOUBLE              shift, and go to state 8
    CONST               shift, and go to state 9
    VOLATILE            shift, and go to state 10
    VOID                shift, and go to state 11
    _BOOL               shift, and go to state 12
    _COMPLEX            shift, and go to state 13
    _IMAGINARY          shift, and go to state 14
    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 103
    CUR_CLOSE           shift, and go to state 169
    ENUM                shift, and go to state 15
    BREAK               shift, and go to state 170
    CASE                shift, and go to state 171
    CONTINUE            shift, and go to state 172
    DEFAULT             shift, and go to state 173
    DO                  shift, and go to state 174
    IF                  shift, and go to state 175
    FOR                 shift, and go to state 176
    GOTO                shift, and go to state 177
    WHILE               shift, and go to state 178
    SWITCH              shift, and go to state 179
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    EXTERN              shift, and go to state 16
    STATIC              shift, and go to state 17
    AUTO                shift, and go to state 18
    REGISTER            shift, and go to state 19
    INLINE              shift, and go to state 20
    RESTRICT            shift, and go to state 21
    RETURN              shift, and go to state 180
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 181
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 182
    declaration                go to state 183
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 184
    labeled_statement          go to state 185
    compound_statement         go to state 186
    block_item_list            go to state 187
    block_item                 go to state 188
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 104

  202 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement .

    $default  reduce using rule 202 (function_definition)


State 105

  206 declaration_list: declaration_list declaration .

    $default  reduce using rule 206 (declaration_list)


State 106

  133 direct_declarator: RND_OPEN declarator . RND_CLOSE

    RND_CLOSE  shift, and go to state 194


State 107

  134 direct_declarator: direct_declarator SQ_OPEN . type_qualifier_list_opt assignment_expression_opt SQ_CLOSE
  135                  | direct_declarator SQ_OPEN . STATIC type_qualifier_list_opt assignment_expression SQ_CLOSE
  136                  | direct_declarator SQ_OPEN . type_qualifier_list_opt MUL SQ_CLOSE

    CONST     shift, and go to state 9
    VOLATILE  shift, and go to state 10
    STATIC    shift, and go to state 195
    RESTRICT  shift, and go to state 21

    $default  reduce using rule 142 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 196
    type_qualifier_list      go to state 51


State 108

  137 direct_declarator: direct_declarator RND_OPEN . parameter_type_list RND_CLOSE
  138                  | direct_declarator RND_OPEN . identifier_list_opt RND_CLOSE

    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    CONST       shift, and go to state 9
    VOLATILE    shift, and go to state 10
    VOID        shift, and go to state 11
    _BOOL       shift, and go to state 12
    _COMPLEX    shift, and go to state 13
    _IMAGINARY  shift, and go to state 14
    ENUM        shift, and go to state 15
    EXTERN      shift, and go to state 16
    STATIC      shift, and go to state 17
    AUTO        shift, and go to state 18
    REGISTER    shift, and go to state 19
    INLINE      shift, and go to state 20
    RESTRICT    shift, and go to state 21
    IDENTIFIER  shift, and go to state 197

    $default  reduce using rule 140 (identifier_list_opt)

    declaration_specifiers   go to state 198
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    identifier_list_opt      go to state 199
    parameter_type_list      go to state 200
    parameter_list           go to state 201
    parameter_declaration    go to state 202
    identifier_list          go to state 203


State 109

  124 enumerator: IDENTIFIER ASSIGN . constant_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 204
    constant_expression        go to state 205


State 110

  116 enum_specifier: ENUM IDENTIFIER_opt CUR_OPEN enumerator_list CUR_CLOSE .

    $default  reduce using rule 116 (enum_specifier)


State 111

  117 enum_specifier: ENUM IDENTIFIER_opt CUR_OPEN enumerator_list COMMA . CUR_CLOSE
  122 enumerator_list: enumerator_list COMMA . enumerator

    CUR_CLOSE   shift, and go to state 206
    IDENTIFIER  shift, and go to state 62

    enumerator  go to state 207


State 112

    8 primary_expression: RND_OPEN . expression RND_CLOSE
   17 postfix_expression: RND_OPEN . type_name RND_CLOSE CUR_OPEN initializer_list CUR_CLOSE
   18                   | RND_OPEN . type_name RND_CLOSE CUR_OPEN initializer_list COMMA CUR_CLOSE

    CHAR                shift, and go to state 1
    SHORT               shift, and go to state 2
    INT                 shift, and go to state 3
    LONG                shift, and go to state 4
    SIGNED              shift, and go to state 5
    UNSIGNED            shift, and go to state 6
    FLOAT               shift, and go to state 7
    DOUBLE              shift, and go to state 8
    CONST               shift, and go to state 9
    VOLATILE            shift, and go to state 10
    VOID                shift, and go to state 11
    _BOOL               shift, and go to state 12
    _COMPLEX            shift, and go to state 13
    _IMAGINARY          shift, and go to state 14
    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    ENUM                shift, and go to state 15
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    RESTRICT            shift, and go to state 21
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 116
    type_specifier             go to state 117
    specifier_qualifier_list   go to state 118
    enum_specifier             go to state 26
    type_qualifier             go to state 119
    type_name                  go to state 208


State 113

   23 unary_expression: INC unary_expression .

    $default  reduce using rule 23 (unary_expression)


State 114

   24 unary_expression: DEC unary_expression .

    $default  reduce using rule 24 (unary_expression)


State 115

   79 expression: assignment_expression .

    $default  reduce using rule 79 (expression)


State 116

    8 primary_expression: RND_OPEN expression . RND_CLOSE
   80 expression: expression . COMMA assignment_expression

    RND_CLOSE  shift, and go to state 209
    COMMA      shift, and go to state 210


State 117

  112 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    CONST       shift, and go to state 9
    VOLATILE    shift, and go to state 10
    VOID        shift, and go to state 11
    _BOOL       shift, and go to state 12
    _COMPLEX    shift, and go to state 13
    _IMAGINARY  shift, and go to state 14
    ENUM        shift, and go to state 15
    RESTRICT    shift, and go to state 21

    $default  reduce using rule 115 (specifier_qualifier_list_opt)

    type_specifier                go to state 117
    specifier_qualifier_list      go to state 211
    specifier_qualifier_list_opt  go to state 212
    enum_specifier                go to state 26
    type_qualifier                go to state 119


State 118

  157 type_name: specifier_qualifier_list .

    $default  reduce using rule 157 (type_name)


State 119

  113 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    CONST       shift, and go to state 9
    VOLATILE    shift, and go to state 10
    VOID        shift, and go to state 11
    _BOOL       shift, and go to state 12
    _COMPLEX    shift, and go to state 13
    _IMAGINARY  shift, and go to state 14
    ENUM        shift, and go to state 15
    RESTRICT    shift, and go to state 21

    $default  reduce using rule 115 (specifier_qualifier_list_opt)

    type_specifier                go to state 117
    specifier_qualifier_list      go to state 211
    specifier_qualifier_list_opt  go to state 213
    enum_specifier                go to state 26
    type_qualifier                go to state 119


State 120

   17 postfix_expression: RND_OPEN type_name . RND_CLOSE CUR_OPEN initializer_list CUR_CLOSE
   18                   | RND_OPEN type_name . RND_CLOSE CUR_OPEN initializer_list COMMA CUR_CLOSE
   35 cast_expression: RND_OPEN type_name . RND_CLOSE cast_expression

    RND_CLOSE  shift, and go to state 214


State 121

  168 designator: SQ_OPEN . constant_expression SQ_CLOSE

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 204
    constant_expression        go to state 215


State 122

  169 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 216


State 123

  161 initializer_list: initializer .

    $default  reduce using rule 161 (initializer_list)


State 124

  159 initializer: CUR_OPEN initializer_list . CUR_CLOSE
  160            | CUR_OPEN initializer_list . COMMA CUR_CLOSE
  163 initializer_list: initializer_list . COMMA initializer
  164                 | initializer_list . COMMA designation initializer

    CUR_CLOSE  shift, and go to state 217
    COMMA      shift, and go to state 218


State 125

  162 initializer_list: designation . initializer

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 73
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 101
    initializer                go to state 219


State 126

  165 designation: designator_list . ASSIGN
  167 designator_list: designator_list . designator

    SQ_OPEN  shift, and go to state 121
    DOT      shift, and go to state 122
    ASSIGN   shift, and go to state 220

    designator  go to state 221


State 127

  166 designator_list: designator .

    $default  reduce using rule 166 (designator_list)


State 128

    8 primary_expression: RND_OPEN . expression RND_CLOSE
   17 postfix_expression: RND_OPEN . type_name RND_CLOSE CUR_OPEN initializer_list CUR_CLOSE
   18                   | RND_OPEN . type_name RND_CLOSE CUR_OPEN initializer_list COMMA CUR_CLOSE
   27 unary_expression: SIZEOF RND_OPEN . type_name RND_CLOSE

    CHAR                shift, and go to state 1
    SHORT               shift, and go to state 2
    INT                 shift, and go to state 3
    LONG                shift, and go to state 4
    SIGNED              shift, and go to state 5
    UNSIGNED            shift, and go to state 6
    FLOAT               shift, and go to state 7
    DOUBLE              shift, and go to state 8
    CONST               shift, and go to state 9
    VOLATILE            shift, and go to state 10
    VOID                shift, and go to state 11
    _BOOL               shift, and go to state 12
    _COMPLEX            shift, and go to state 13
    _IMAGINARY          shift, and go to state 14
    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    ENUM                shift, and go to state 15
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    RESTRICT            shift, and go to state 21
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 116
    type_specifier             go to state 117
    specifier_qualifier_list   go to state 118
    enum_specifier             go to state 26
    type_qualifier             go to state 119
    type_name                  go to state 222


State 129

   26 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 26 (unary_expression)


State 130

   15 postfix_expression: postfix_expression INC .

    $default  reduce using rule 15 (postfix_expression)


State 131

   16 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 16 (postfix_expression)


State 132

   14 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 223


State 133

   10 postfix_expression: postfix_expression SQ_OPEN . expression SQ_CLOSE

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 224


State 134

   11 postfix_expression: postfix_expression RND_OPEN . RND_CLOSE
   12                   | postfix_expression RND_OPEN . argument_expression_list_opt RND_CLOSE

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    RND_CLOSE           shift, and go to state 225
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression            go to state 85
    postfix_expression            go to state 86
    argument_expression_list_opt  go to state 226
    argument_expression_list      go to state 227
    unary_expression              go to state 87
    unary_operator                go to state 88
    cast_expression               go to state 89
    multiplicative_expression     go to state 90
    additive_expression           go to state 91
    shift_expression              go to state 92
    relational_expression         go to state 93
    equality_expression           go to state 94
    and_expression                go to state 95
    exclusive_or_expression       go to state 96
    inclusive_or_expression       go to state 97
    logical_and_expression        go to state 98
    logical_or_expression         go to state 99
    conditional_expression        go to state 100
    assignment_expression         go to state 228


State 135

   13 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 229


State 136

   69 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 69 (assignment_operator)


State 137

   73 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 73 (assignment_operator)


State 138

   71 assignment_operator: BIT_AND_ASSIGN .

    $default  reduce using rule 71 (assignment_operator)


State 139

   72 assignment_operator: BIT_XOR_ASSIGN .

    $default  reduce using rule 72 (assignment_operator)


State 140

   78 assignment_operator: BIT_OR_ASSIGN .

    $default  reduce using rule 78 (assignment_operator)


State 141

   76 assignment_operator: SHIFT_R_ASSIGN .

    $default  reduce using rule 76 (assignment_operator)


State 142

   75 assignment_operator: SHIFT_L_ASSIGN .

    $default  reduce using rule 75 (assignment_operator)


State 143

   74 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 74 (assignment_operator)


State 144

   77 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 77 (assignment_operator)


State 145

   70 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 70 (assignment_operator)


State 146

   68 assignment_operator: ASSIGN .

    $default  reduce using rule 68 (assignment_operator)


State 147

   67 assignment_expression: unary_expression assignment_operator . assignment_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 230


State 148

   34 cast_expression: unary_expression .

    $default  reduce using rule 34 (cast_expression)


State 149

   25 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 25 (unary_expression)


State 150

   37 multiplicative_expression: multiplicative_expression MUL . cast_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 148
    unary_operator      go to state 88
    cast_expression     go to state 231


State 151

   38 multiplicative_expression: multiplicative_expression DIV . cast_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 148
    unary_operator      go to state 88
    cast_expression     go to state 232


State 152

   39 multiplicative_expression: multiplicative_expression MOD . cast_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 148
    unary_operator      go to state 88
    cast_expression     go to state 233


State 153

   41 additive_expression: additive_expression ADD . multiplicative_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 234


State 154

   42 additive_expression: additive_expression SUB . multiplicative_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 235


State 155

   45 shift_expression: shift_expression SHIFT_R . additive_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 236


State 156

   44 shift_expression: shift_expression SHIFT_L . additive_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 237


State 157

   49 relational_expression: relational_expression LTE . shift_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 238


State 158

   50 relational_expression: relational_expression GTE . shift_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 239


State 159

   47 relational_expression: relational_expression LT . shift_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 240


State 160

   48 relational_expression: relational_expression GT . shift_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 241


State 161

   52 equality_expression: equality_expression EQUAL . relational_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 242


State 162

   53 equality_expression: equality_expression NOT_EQUAL . relational_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 243


State 163

   55 and_expression: and_expression AMP . equality_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 244


State 164

   57 exclusive_or_expression: exclusive_or_expression BIT_XOR . and_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 245


State 165

   59 inclusive_or_expression: inclusive_or_expression BIT_OR . exclusive_or_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 246


State 166

   61 logical_and_expression: logical_and_expression AND . M inclusive_or_expression

    $default  reduce using rule 1 (M)

    M  go to state 247


State 167

   63 logical_or_expression: logical_or_expression OR . M logical_and_expression

    $default  reduce using rule 1 (M)

    M  go to state 248


State 168

   65 conditional_expression: logical_or_expression N . QUES M expression N COLON M conditional_expression

    QUES  shift, and go to state 249


State 169

  179 compound_statement: CUR_OPEN CUR_CLOSE .

    $default  reduce using rule 179 (compound_statement)


State 170

  196 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 250


State 171

  177 labeled_statement: CASE . constant_expression COLON statement

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 204
    constant_expression        go to state 251


State 172

  195 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 252


State 173

  178 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 253


State 174

  192 iteration_statement: DO . M statement WHILE RND_OPEN M expression N RND_CLOSE SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 254


State 175

  188 selection_statement: IF . RND_OPEN expression N RND_CLOSE M statement
  189                    | IF . RND_OPEN expression N RND_CLOSE M statement N ELSE M statement

    RND_OPEN  shift, and go to state 255


State 176

  193 iteration_statement: FOR . RND_OPEN expression_opt SEMICOLON M expression_opt N SEMICOLON M expression_opt N RND_CLOSE M statement

    RND_OPEN  shift, and go to state 256


State 177

  194 jump_statement: GOTO . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 257


State 178

  191 iteration_statement: WHILE . RND_OPEN M expression N RND_CLOSE M statement

    RND_OPEN  shift, and go to state 258


State 179

  190 selection_statement: SWITCH . RND_OPEN expression RND_CLOSE statement

    RND_OPEN  shift, and go to state 259


State 180

  197 jump_statement: RETURN . expression_opt SEMICOLON

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 182
    expression_opt             go to state 260


State 181

    3 primary_expression: IDENTIFIER .
  176 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 261

    $default  reduce using rule 3 (primary_expression)


State 182

   80 expression: expression . COMMA assignment_expression
  186 expression_opt: expression .

    COMMA  shift, and go to state 210

    $default  reduce using rule 186 (expression_opt)


State 183

  183 block_item: declaration .

    $default  reduce using rule 183 (block_item)


State 184

  184 block_item: statement .

    $default  reduce using rule 184 (block_item)


State 185

  170 statement: labeled_statement .

    $default  reduce using rule 170 (statement)


State 186

  171 statement: compound_statement .

    $default  reduce using rule 171 (statement)


State 187

  180 compound_statement: CUR_OPEN block_item_list . CUR_CLOSE
  182 block_item_list: block_item_list . M block_item

    CUR_CLOSE  shift, and go to state 262

    $default  reduce using rule 1 (M)

    M  go to state 263


State 188

  181 block_item_list: block_item .

    $default  reduce using rule 181 (block_item_list)


State 189

  172 statement: expression_statement .

    $default  reduce using rule 172 (statement)


State 190

  185 expression_statement: expression_opt . SEMICOLON

    SEMICOLON  shift, and go to state 264


State 191

  173 statement: selection_statement .

    $default  reduce using rule 173 (statement)


State 192

  174 statement: iteration_statement .

    $default  reduce using rule 174 (statement)


State 193

  175 statement: jump_statement .

    $default  reduce using rule 175 (statement)


State 194

  133 direct_declarator: RND_OPEN declarator RND_CLOSE .

    $default  reduce using rule 133 (direct_declarator)


State 195

  135 direct_declarator: direct_declarator SQ_OPEN STATIC . type_qualifier_list_opt assignment_expression SQ_CLOSE

    CONST     shift, and go to state 9
    VOLATILE  shift, and go to state 10
    RESTRICT  shift, and go to state 21

    $default  reduce using rule 142 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 265
    type_qualifier_list      go to state 51


State 196

  134 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list_opt . assignment_expression_opt SQ_CLOSE
  136                  | direct_declarator SQ_OPEN type_qualifier_list_opt . MUL SQ_CLOSE

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 266
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    $default  reduce using rule 143 (assignment_expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 267
    assignment_expression_opt  go to state 268


State 197

  155 identifier_list: IDENTIFIER .

    $default  reduce using rule 155 (identifier_list)


State 198

  153 parameter_declaration: declaration_specifiers . declarator
  154                      | declaration_specifiers .

    MUL  shift, and go to state 34

    RND_CLOSE  reduce using rule 154 (parameter_declaration)
    COMMA      reduce using rule 154 (parameter_declaration)
    $default   reduce using rule 131 (pointer_opt)

    declarator   go to state 269
    pointer_opt  go to state 39
    pointer      go to state 40


State 199

  138 direct_declarator: direct_declarator RND_OPEN identifier_list_opt . RND_CLOSE

    RND_CLOSE  shift, and go to state 270


State 200

  137 direct_declarator: direct_declarator RND_OPEN parameter_type_list . RND_CLOSE

    RND_CLOSE  shift, and go to state 271


State 201

  149 parameter_type_list: parameter_list .
  150                    | parameter_list . COMMA DOTS
  152 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 272

    $default  reduce using rule 149 (parameter_type_list)


State 202

  151 parameter_list: parameter_declaration .

    $default  reduce using rule 151 (parameter_list)


State 203

  139 identifier_list_opt: identifier_list .
  156 identifier_list: identifier_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 273

    $default  reduce using rule 139 (identifier_list_opt)


State 204

   81 constant_expression: conditional_expression .

    $default  reduce using rule 81 (constant_expression)


State 205

  124 enumerator: IDENTIFIER ASSIGN constant_expression .

    $default  reduce using rule 124 (enumerator)


State 206

  117 enum_specifier: ENUM IDENTIFIER_opt CUR_OPEN enumerator_list COMMA CUR_CLOSE .

    $default  reduce using rule 117 (enum_specifier)


State 207

  122 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 122 (enumerator_list)


State 208

   17 postfix_expression: RND_OPEN type_name . RND_CLOSE CUR_OPEN initializer_list CUR_CLOSE
   18                   | RND_OPEN type_name . RND_CLOSE CUR_OPEN initializer_list COMMA CUR_CLOSE

    RND_CLOSE  shift, and go to state 274


State 209

    8 primary_expression: RND_OPEN expression RND_CLOSE .

    $default  reduce using rule 8 (primary_expression)


State 210

   80 expression: expression COMMA . assignment_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 275


State 211

  114 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 114 (specifier_qualifier_list_opt)


State 212

  112 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 112 (specifier_qualifier_list)


State 213

  113 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 113 (specifier_qualifier_list)


State 214

   17 postfix_expression: RND_OPEN type_name RND_CLOSE . CUR_OPEN initializer_list CUR_CLOSE
   18                   | RND_OPEN type_name RND_CLOSE . CUR_OPEN initializer_list COMMA CUR_CLOSE
   35 cast_expression: RND_OPEN type_name RND_CLOSE . cast_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 276
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression  go to state 85
    postfix_expression  go to state 86
    unary_expression    go to state 148
    unary_operator      go to state 88
    cast_expression     go to state 277


State 215

  168 designator: SQ_OPEN constant_expression . SQ_CLOSE

    SQ_CLOSE  shift, and go to state 278


State 216

  169 designator: DOT IDENTIFIER .

    $default  reduce using rule 169 (designator)


State 217

  159 initializer: CUR_OPEN initializer_list CUR_CLOSE .

    $default  reduce using rule 159 (initializer)


State 218

  160 initializer: CUR_OPEN initializer_list COMMA . CUR_CLOSE
  163 initializer_list: initializer_list COMMA . initializer
  164                 | initializer_list COMMA . designation initializer

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    SQ_OPEN             shift, and go to state 121
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 73
    CUR_CLOSE           shift, and go to state 279
    SIZEOF              shift, and go to state 74
    DOT                 shift, and go to state 122
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 101
    initializer                go to state 280
    designation                go to state 281
    designator_list            go to state 126
    designator                 go to state 127


State 219

  162 initializer_list: designation initializer .

    $default  reduce using rule 162 (initializer_list)


State 220

  165 designation: designator_list ASSIGN .

    $default  reduce using rule 165 (designation)


State 221

  167 designator_list: designator_list designator .

    $default  reduce using rule 167 (designator_list)


State 222

   17 postfix_expression: RND_OPEN type_name . RND_CLOSE CUR_OPEN initializer_list CUR_CLOSE
   18                   | RND_OPEN type_name . RND_CLOSE CUR_OPEN initializer_list COMMA CUR_CLOSE
   27 unary_expression: SIZEOF RND_OPEN type_name . RND_CLOSE

    RND_CLOSE  shift, and go to state 282


State 223

   14 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 14 (postfix_expression)


State 224

   10 postfix_expression: postfix_expression SQ_OPEN expression . SQ_CLOSE
   80 expression: expression . COMMA assignment_expression

    SQ_CLOSE  shift, and go to state 283
    COMMA     shift, and go to state 210


State 225

   11 postfix_expression: postfix_expression RND_OPEN RND_CLOSE .

    $default  reduce using rule 11 (postfix_expression)


State 226

   12 postfix_expression: postfix_expression RND_OPEN argument_expression_list_opt . RND_CLOSE

    RND_CLOSE  shift, and go to state 284


State 227

   19 argument_expression_list_opt: argument_expression_list .
   21 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 285

    $default  reduce using rule 19 (argument_expression_list_opt)


State 228

   20 argument_expression_list: assignment_expression .

    $default  reduce using rule 20 (argument_expression_list)


State 229

   13 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 13 (postfix_expression)


State 230

   67 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 67 (assignment_expression)


State 231

   37 multiplicative_expression: multiplicative_expression MUL cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


State 232

   38 multiplicative_expression: multiplicative_expression DIV cast_expression .

    $default  reduce using rule 38 (multiplicative_expression)


State 233

   39 multiplicative_expression: multiplicative_expression MOD cast_expression .

    $default  reduce using rule 39 (multiplicative_expression)


State 234

   37 multiplicative_expression: multiplicative_expression . MUL cast_expression
   38                          | multiplicative_expression . DIV cast_expression
   39                          | multiplicative_expression . MOD cast_expression
   41 additive_expression: additive_expression ADD multiplicative_expression .

    MUL  shift, and go to state 150
    DIV  shift, and go to state 151
    MOD  shift, and go to state 152

    $default  reduce using rule 41 (additive_expression)


State 235

   37 multiplicative_expression: multiplicative_expression . MUL cast_expression
   38                          | multiplicative_expression . DIV cast_expression
   39                          | multiplicative_expression . MOD cast_expression
   42 additive_expression: additive_expression SUB multiplicative_expression .

    MUL  shift, and go to state 150
    DIV  shift, and go to state 151
    MOD  shift, and go to state 152

    $default  reduce using rule 42 (additive_expression)


State 236

   41 additive_expression: additive_expression . ADD multiplicative_expression
   42                    | additive_expression . SUB multiplicative_expression
   45 shift_expression: shift_expression SHIFT_R additive_expression .

    ADD  shift, and go to state 153
    SUB  shift, and go to state 154

    $default  reduce using rule 45 (shift_expression)


State 237

   41 additive_expression: additive_expression . ADD multiplicative_expression
   42                    | additive_expression . SUB multiplicative_expression
   44 shift_expression: shift_expression SHIFT_L additive_expression .

    ADD  shift, and go to state 153
    SUB  shift, and go to state 154

    $default  reduce using rule 44 (shift_expression)


State 238

   44 shift_expression: shift_expression . SHIFT_L additive_expression
   45                 | shift_expression . SHIFT_R additive_expression
   49 relational_expression: relational_expression LTE shift_expression .

    SHIFT_R  shift, and go to state 155
    SHIFT_L  shift, and go to state 156

    $default  reduce using rule 49 (relational_expression)


State 239

   44 shift_expression: shift_expression . SHIFT_L additive_expression
   45                 | shift_expression . SHIFT_R additive_expression
   50 relational_expression: relational_expression GTE shift_expression .

    SHIFT_R  shift, and go to state 155
    SHIFT_L  shift, and go to state 156

    $default  reduce using rule 50 (relational_expression)


State 240

   44 shift_expression: shift_expression . SHIFT_L additive_expression
   45                 | shift_expression . SHIFT_R additive_expression
   47 relational_expression: relational_expression LT shift_expression .

    SHIFT_R  shift, and go to state 155
    SHIFT_L  shift, and go to state 156

    $default  reduce using rule 47 (relational_expression)


State 241

   44 shift_expression: shift_expression . SHIFT_L additive_expression
   45                 | shift_expression . SHIFT_R additive_expression
   48 relational_expression: relational_expression GT shift_expression .

    SHIFT_R  shift, and go to state 155
    SHIFT_L  shift, and go to state 156

    $default  reduce using rule 48 (relational_expression)


State 242

   47 relational_expression: relational_expression . LT shift_expression
   48                      | relational_expression . GT shift_expression
   49                      | relational_expression . LTE shift_expression
   50                      | relational_expression . GTE shift_expression
   52 equality_expression: equality_expression EQUAL relational_expression .

    LTE  shift, and go to state 157
    GTE  shift, and go to state 158
    LT   shift, and go to state 159
    GT   shift, and go to state 160

    $default  reduce using rule 52 (equality_expression)


State 243

   47 relational_expression: relational_expression . LT shift_expression
   48                      | relational_expression . GT shift_expression
   49                      | relational_expression . LTE shift_expression
   50                      | relational_expression . GTE shift_expression
   53 equality_expression: equality_expression NOT_EQUAL relational_expression .

    LTE  shift, and go to state 157
    GTE  shift, and go to state 158
    LT   shift, and go to state 159
    GT   shift, and go to state 160

    $default  reduce using rule 53 (equality_expression)


State 244

   52 equality_expression: equality_expression . EQUAL relational_expression
   53                    | equality_expression . NOT_EQUAL relational_expression
   55 and_expression: and_expression AMP equality_expression .

    EQUAL      shift, and go to state 161
    NOT_EQUAL  shift, and go to state 162

    $default  reduce using rule 55 (and_expression)


State 245

   55 and_expression: and_expression . AMP equality_expression
   57 exclusive_or_expression: exclusive_or_expression BIT_XOR and_expression .

    AMP  shift, and go to state 163

    $default  reduce using rule 57 (exclusive_or_expression)


State 246

   57 exclusive_or_expression: exclusive_or_expression . BIT_XOR and_expression
   59 inclusive_or_expression: inclusive_or_expression BIT_OR exclusive_or_expression .

    BIT_XOR  shift, and go to state 164

    $default  reduce using rule 59 (inclusive_or_expression)


State 247

   61 logical_and_expression: logical_and_expression AND M . inclusive_or_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 286


State 248

   63 logical_or_expression: logical_or_expression OR M . logical_and_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 287


State 249

   65 conditional_expression: logical_or_expression N QUES . M expression N COLON M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 288


State 250

  196 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 196 (jump_statement)


State 251

  177 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 289


State 252

  195 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 195 (jump_statement)


State 253

  178 labeled_statement: DEFAULT COLON . statement

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 103
    BREAK               shift, and go to state 170
    CASE                shift, and go to state 171
    CONTINUE            shift, and go to state 172
    DEFAULT             shift, and go to state 173
    DO                  shift, and go to state 174
    IF                  shift, and go to state 175
    FOR                 shift, and go to state 176
    GOTO                shift, and go to state 177
    WHILE               shift, and go to state 178
    SWITCH              shift, and go to state 179
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    RETURN              shift, and go to state 180
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 181
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 182
    statement                  go to state 290
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 254

  192 iteration_statement: DO M . statement WHILE RND_OPEN M expression N RND_CLOSE SEMICOLON

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 103
    BREAK               shift, and go to state 170
    CASE                shift, and go to state 171
    CONTINUE            shift, and go to state 172
    DEFAULT             shift, and go to state 173
    DO                  shift, and go to state 174
    IF                  shift, and go to state 175
    FOR                 shift, and go to state 176
    GOTO                shift, and go to state 177
    WHILE               shift, and go to state 178
    SWITCH              shift, and go to state 179
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    RETURN              shift, and go to state 180
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 181
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 182
    statement                  go to state 291
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 255

  188 selection_statement: IF RND_OPEN . expression N RND_CLOSE M statement
  189                    | IF RND_OPEN . expression N RND_CLOSE M statement N ELSE M statement

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 292


State 256

  193 iteration_statement: FOR RND_OPEN . expression_opt SEMICOLON M expression_opt N SEMICOLON M expression_opt N RND_CLOSE M statement

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 182
    expression_opt             go to state 293


State 257

  194 jump_statement: GOTO IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 294


State 258

  191 iteration_statement: WHILE RND_OPEN . M expression N RND_CLOSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 295


State 259

  190 selection_statement: SWITCH RND_OPEN . expression RND_CLOSE statement

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 296


State 260

  197 jump_statement: RETURN expression_opt . SEMICOLON

    SEMICOLON  shift, and go to state 297


State 261

  176 labeled_statement: IDENTIFIER COLON . statement

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 103
    BREAK               shift, and go to state 170
    CASE                shift, and go to state 171
    CONTINUE            shift, and go to state 172
    DEFAULT             shift, and go to state 173
    DO                  shift, and go to state 174
    IF                  shift, and go to state 175
    FOR                 shift, and go to state 176
    GOTO                shift, and go to state 177
    WHILE               shift, and go to state 178
    SWITCH              shift, and go to state 179
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    RETURN              shift, and go to state 180
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 181
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 182
    statement                  go to state 298
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 262

  180 compound_statement: CUR_OPEN block_item_list CUR_CLOSE .

    $default  reduce using rule 180 (compound_statement)


State 263

  182 block_item_list: block_item_list M . block_item

    CHAR                shift, and go to state 1
    SHORT               shift, and go to state 2
    INT                 shift, and go to state 3
    LONG                shift, and go to state 4
    SIGNED              shift, and go to state 5
    UNSIGNED            shift, and go to state 6
    FLOAT               shift, and go to state 7
    DOUBLE              shift, and go to state 8
    CONST               shift, and go to state 9
    VOLATILE            shift, and go to state 10
    VOID                shift, and go to state 11
    _BOOL               shift, and go to state 12
    _COMPLEX            shift, and go to state 13
    _IMAGINARY          shift, and go to state 14
    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 103
    ENUM                shift, and go to state 15
    BREAK               shift, and go to state 170
    CASE                shift, and go to state 171
    CONTINUE            shift, and go to state 172
    DEFAULT             shift, and go to state 173
    DO                  shift, and go to state 174
    IF                  shift, and go to state 175
    FOR                 shift, and go to state 176
    GOTO                shift, and go to state 177
    WHILE               shift, and go to state 178
    SWITCH              shift, and go to state 179
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    EXTERN              shift, and go to state 16
    STATIC              shift, and go to state 17
    AUTO                shift, and go to state 18
    REGISTER            shift, and go to state 19
    INLINE              shift, and go to state 20
    RESTRICT            shift, and go to state 21
    RETURN              shift, and go to state 180
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 181
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 182
    declaration                go to state 183
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 184
    labeled_statement          go to state 185
    compound_statement         go to state 186
    block_item                 go to state 299
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 264

  185 expression_statement: expression_opt SEMICOLON .

    $default  reduce using rule 185 (expression_statement)


State 265

  135 direct_declarator: direct_declarator SQ_OPEN STATIC type_qualifier_list_opt . assignment_expression SQ_CLOSE

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 300


State 266

   29 unary_operator: MUL .
  136 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list_opt MUL . SQ_CLOSE

    SQ_CLOSE  shift, and go to state 301

    $default  reduce using rule 29 (unary_operator)


State 267

  144 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 144 (assignment_expression_opt)


State 268

  134 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list_opt assignment_expression_opt . SQ_CLOSE

    SQ_CLOSE  shift, and go to state 302


State 269

  153 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 153 (parameter_declaration)


State 270

  138 direct_declarator: direct_declarator RND_OPEN identifier_list_opt RND_CLOSE .

    $default  reduce using rule 138 (direct_declarator)


State 271

  137 direct_declarator: direct_declarator RND_OPEN parameter_type_list RND_CLOSE .

    $default  reduce using rule 137 (direct_declarator)


State 272

  150 parameter_type_list: parameter_list COMMA . DOTS
  152 parameter_list: parameter_list COMMA . parameter_declaration

    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    CONST       shift, and go to state 9
    VOLATILE    shift, and go to state 10
    VOID        shift, and go to state 11
    _BOOL       shift, and go to state 12
    _COMPLEX    shift, and go to state 13
    _IMAGINARY  shift, and go to state 14
    DOTS        shift, and go to state 303
    ENUM        shift, and go to state 15
    EXTERN      shift, and go to state 16
    STATIC      shift, and go to state 17
    AUTO        shift, and go to state 18
    REGISTER    shift, and go to state 19
    INLINE      shift, and go to state 20
    RESTRICT    shift, and go to state 21

    declaration_specifiers   go to state 198
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 304


State 273

  156 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 305


State 274

   17 postfix_expression: RND_OPEN type_name RND_CLOSE . CUR_OPEN initializer_list CUR_CLOSE
   18                   | RND_OPEN type_name RND_CLOSE . CUR_OPEN initializer_list COMMA CUR_CLOSE

    CUR_OPEN  shift, and go to state 276


State 275

   80 expression: expression COMMA assignment_expression .

    $default  reduce using rule 80 (expression)


State 276

   17 postfix_expression: RND_OPEN type_name RND_CLOSE CUR_OPEN . initializer_list CUR_CLOSE
   18                   | RND_OPEN type_name RND_CLOSE CUR_OPEN . initializer_list COMMA CUR_CLOSE

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    SQ_OPEN             shift, and go to state 121
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 73
    SIZEOF              shift, and go to state 74
    DOT                 shift, and go to state 122
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 101
    initializer                go to state 123
    initializer_list           go to state 306
    designation                go to state 125
    designator_list            go to state 126
    designator                 go to state 127


State 277

   35 cast_expression: RND_OPEN type_name RND_CLOSE cast_expression .

    $default  reduce using rule 35 (cast_expression)


State 278

  168 designator: SQ_OPEN constant_expression SQ_CLOSE .

    $default  reduce using rule 168 (designator)


State 279

  160 initializer: CUR_OPEN initializer_list COMMA CUR_CLOSE .

    $default  reduce using rule 160 (initializer)


State 280

  163 initializer_list: initializer_list COMMA initializer .

    $default  reduce using rule 163 (initializer_list)


State 281

  164 initializer_list: initializer_list COMMA designation . initializer

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 73
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 101
    initializer                go to state 307


State 282

   17 postfix_expression: RND_OPEN type_name RND_CLOSE . CUR_OPEN initializer_list CUR_CLOSE
   18                   | RND_OPEN type_name RND_CLOSE . CUR_OPEN initializer_list COMMA CUR_CLOSE
   27 unary_expression: SIZEOF RND_OPEN type_name RND_CLOSE .

    CUR_OPEN  shift, and go to state 276

    $default  reduce using rule 27 (unary_expression)


State 283

   10 postfix_expression: postfix_expression SQ_OPEN expression SQ_CLOSE .

    $default  reduce using rule 10 (postfix_expression)


State 284

   12 postfix_expression: postfix_expression RND_OPEN argument_expression_list_opt RND_CLOSE .

    $default  reduce using rule 12 (postfix_expression)


State 285

   21 argument_expression_list: argument_expression_list COMMA . assignment_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 308


State 286

   59 inclusive_or_expression: inclusive_or_expression . BIT_OR exclusive_or_expression
   61 logical_and_expression: logical_and_expression AND M inclusive_or_expression .

    BIT_OR  shift, and go to state 165

    $default  reduce using rule 61 (logical_and_expression)


State 287

   61 logical_and_expression: logical_and_expression . AND M inclusive_or_expression
   63 logical_or_expression: logical_or_expression OR M logical_and_expression .

    AND  shift, and go to state 166

    $default  reduce using rule 63 (logical_or_expression)


State 288

   65 conditional_expression: logical_or_expression N QUES M . expression N COLON M conditional_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 309


State 289

  177 labeled_statement: CASE constant_expression COLON . statement

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 103
    BREAK               shift, and go to state 170
    CASE                shift, and go to state 171
    CONTINUE            shift, and go to state 172
    DEFAULT             shift, and go to state 173
    DO                  shift, and go to state 174
    IF                  shift, and go to state 175
    FOR                 shift, and go to state 176
    GOTO                shift, and go to state 177
    WHILE               shift, and go to state 178
    SWITCH              shift, and go to state 179
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    RETURN              shift, and go to state 180
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 181
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 182
    statement                  go to state 310
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 290

  178 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 178 (labeled_statement)


State 291

  192 iteration_statement: DO M statement . WHILE RND_OPEN M expression N RND_CLOSE SEMICOLON

    WHILE  shift, and go to state 311


State 292

   80 expression: expression . COMMA assignment_expression
  188 selection_statement: IF RND_OPEN expression . N RND_CLOSE M statement
  189                    | IF RND_OPEN expression . N RND_CLOSE M statement N ELSE M statement

    COMMA  shift, and go to state 210

    $default  reduce using rule 2 (N)

    N  go to state 312


State 293

  193 iteration_statement: FOR RND_OPEN expression_opt . SEMICOLON M expression_opt N SEMICOLON M expression_opt N RND_CLOSE M statement

    SEMICOLON  shift, and go to state 313


State 294

  194 jump_statement: GOTO IDENTIFIER SEMICOLON .

    $default  reduce using rule 194 (jump_statement)


State 295

  191 iteration_statement: WHILE RND_OPEN M . expression N RND_CLOSE M statement

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 314


State 296

   80 expression: expression . COMMA assignment_expression
  190 selection_statement: SWITCH RND_OPEN expression . RND_CLOSE statement

    RND_CLOSE  shift, and go to state 315
    COMMA      shift, and go to state 210


State 297

  197 jump_statement: RETURN expression_opt SEMICOLON .

    $default  reduce using rule 197 (jump_statement)


State 298

  176 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 176 (labeled_statement)


State 299

  182 block_item_list: block_item_list M block_item .

    $default  reduce using rule 182 (block_item_list)


State 300

  135 direct_declarator: direct_declarator SQ_OPEN STATIC type_qualifier_list_opt assignment_expression . SQ_CLOSE

    SQ_CLOSE  shift, and go to state 316


State 301

  136 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list_opt MUL SQ_CLOSE .

    $default  reduce using rule 136 (direct_declarator)


State 302

  134 direct_declarator: direct_declarator SQ_OPEN type_qualifier_list_opt assignment_expression_opt SQ_CLOSE .

    $default  reduce using rule 134 (direct_declarator)


State 303

  150 parameter_type_list: parameter_list COMMA DOTS .

    $default  reduce using rule 150 (parameter_type_list)


State 304

  152 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 152 (parameter_list)


State 305

  156 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 156 (identifier_list)


State 306

   17 postfix_expression: RND_OPEN type_name RND_CLOSE CUR_OPEN initializer_list . CUR_CLOSE
   18                   | RND_OPEN type_name RND_CLOSE CUR_OPEN initializer_list . COMMA CUR_CLOSE
  163 initializer_list: initializer_list . COMMA initializer
  164                 | initializer_list . COMMA designation initializer

    CUR_CLOSE  shift, and go to state 317
    COMMA      shift, and go to state 318


State 307

  164 initializer_list: initializer_list COMMA designation initializer .

    $default  reduce using rule 164 (initializer_list)


State 308

   21 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 21 (argument_expression_list)


State 309

   65 conditional_expression: logical_or_expression N QUES M expression . N COLON M conditional_expression
   80 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 210

    $default  reduce using rule 2 (N)

    N  go to state 319


State 310

  177 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 177 (labeled_statement)


State 311

  192 iteration_statement: DO M statement WHILE . RND_OPEN M expression N RND_CLOSE SEMICOLON

    RND_OPEN  shift, and go to state 320


State 312

  188 selection_statement: IF RND_OPEN expression N . RND_CLOSE M statement
  189                    | IF RND_OPEN expression N . RND_CLOSE M statement N ELSE M statement

    RND_CLOSE  shift, and go to state 321


State 313

  193 iteration_statement: FOR RND_OPEN expression_opt SEMICOLON . M expression_opt N SEMICOLON M expression_opt N RND_CLOSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 322


State 314

   80 expression: expression . COMMA assignment_expression
  191 iteration_statement: WHILE RND_OPEN M expression . N RND_CLOSE M statement

    COMMA  shift, and go to state 210

    $default  reduce using rule 2 (N)

    N  go to state 323


State 315

  190 selection_statement: SWITCH RND_OPEN expression RND_CLOSE . statement

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 103
    BREAK               shift, and go to state 170
    CASE                shift, and go to state 171
    CONTINUE            shift, and go to state 172
    DEFAULT             shift, and go to state 173
    DO                  shift, and go to state 174
    IF                  shift, and go to state 175
    FOR                 shift, and go to state 176
    GOTO                shift, and go to state 177
    WHILE               shift, and go to state 178
    SWITCH              shift, and go to state 179
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    RETURN              shift, and go to state 180
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 181
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 182
    statement                  go to state 324
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 316

  135 direct_declarator: direct_declarator SQ_OPEN STATIC type_qualifier_list_opt assignment_expression SQ_CLOSE .

    $default  reduce using rule 135 (direct_declarator)


State 317

   17 postfix_expression: RND_OPEN type_name RND_CLOSE CUR_OPEN initializer_list CUR_CLOSE .

    $default  reduce using rule 17 (postfix_expression)


State 318

   18 postfix_expression: RND_OPEN type_name RND_CLOSE CUR_OPEN initializer_list COMMA . CUR_CLOSE
  163 initializer_list: initializer_list COMMA . initializer
  164                 | initializer_list COMMA . designation initializer

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    SQ_OPEN             shift, and go to state 121
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 73
    CUR_CLOSE           shift, and go to state 325
    SIZEOF              shift, and go to state 74
    DOT                 shift, and go to state 122
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 101
    initializer                go to state 280
    designation                go to state 281
    designator_list            go to state 126
    designator                 go to state 127


State 319

   65 conditional_expression: logical_or_expression N QUES M expression N . COLON M conditional_expression

    COLON  shift, and go to state 326


State 320

  192 iteration_statement: DO M statement WHILE RND_OPEN . M expression N RND_CLOSE SEMICOLON

    $default  reduce using rule 1 (M)

    M  go to state 327


State 321

  188 selection_statement: IF RND_OPEN expression N RND_CLOSE . M statement
  189                    | IF RND_OPEN expression N RND_CLOSE . M statement N ELSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 328


State 322

  193 iteration_statement: FOR RND_OPEN expression_opt SEMICOLON M . expression_opt N SEMICOLON M expression_opt N RND_CLOSE M statement

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 182
    expression_opt             go to state 329


State 323

  191 iteration_statement: WHILE RND_OPEN M expression N . RND_CLOSE M statement

    RND_CLOSE  shift, and go to state 330


State 324

  190 selection_statement: SWITCH RND_OPEN expression RND_CLOSE statement .

    $default  reduce using rule 190 (selection_statement)


State 325

   18 postfix_expression: RND_OPEN type_name RND_CLOSE CUR_OPEN initializer_list COMMA CUR_CLOSE .

    $default  reduce using rule 18 (postfix_expression)


State 326

   65 conditional_expression: logical_or_expression N QUES M expression N COLON . M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 331


State 327

  192 iteration_statement: DO M statement WHILE RND_OPEN M . expression N RND_CLOSE SEMICOLON

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 332


State 328

  188 selection_statement: IF RND_OPEN expression N RND_CLOSE M . statement
  189                    | IF RND_OPEN expression N RND_CLOSE M . statement N ELSE M statement

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 103
    BREAK               shift, and go to state 170
    CASE                shift, and go to state 171
    CONTINUE            shift, and go to state 172
    DEFAULT             shift, and go to state 173
    DO                  shift, and go to state 174
    IF                  shift, and go to state 175
    FOR                 shift, and go to state 176
    GOTO                shift, and go to state 177
    WHILE               shift, and go to state 178
    SWITCH              shift, and go to state 179
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    RETURN              shift, and go to state 180
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 181
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 182
    statement                  go to state 333
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 329

  193 iteration_statement: FOR RND_OPEN expression_opt SEMICOLON M expression_opt . N SEMICOLON M expression_opt N RND_CLOSE M statement

    $default  reduce using rule 2 (N)

    N  go to state 334


State 330

  191 iteration_statement: WHILE RND_OPEN M expression N RND_CLOSE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 335


State 331

   65 conditional_expression: logical_or_expression N QUES M expression N COLON M . conditional_expression

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 148
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 336


State 332

   80 expression: expression . COMMA assignment_expression
  192 iteration_statement: DO M statement WHILE RND_OPEN M expression . N RND_CLOSE SEMICOLON

    COMMA  shift, and go to state 210

    $default  reduce using rule 2 (N)

    N  go to state 337


State 333

  188 selection_statement: IF RND_OPEN expression N RND_CLOSE M statement .
  189                    | IF RND_OPEN expression N RND_CLOSE M statement . N ELSE M statement

    ELSE      reduce using rule 2 (N)
    ELSE      [reduce using rule 188 (selection_statement)]
    $default  reduce using rule 188 (selection_statement)

    N  go to state 338


State 334

  193 iteration_statement: FOR RND_OPEN expression_opt SEMICOLON M expression_opt N . SEMICOLON M expression_opt N RND_CLOSE M statement

    SEMICOLON  shift, and go to state 339


State 335

  191 iteration_statement: WHILE RND_OPEN M expression N RND_CLOSE M . statement

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 103
    BREAK               shift, and go to state 170
    CASE                shift, and go to state 171
    CONTINUE            shift, and go to state 172
    DEFAULT             shift, and go to state 173
    DO                  shift, and go to state 174
    IF                  shift, and go to state 175
    FOR                 shift, and go to state 176
    GOTO                shift, and go to state 177
    WHILE               shift, and go to state 178
    SWITCH              shift, and go to state 179
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    RETURN              shift, and go to state 180
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 181
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 182
    statement                  go to state 340
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 336

   65 conditional_expression: logical_or_expression N QUES M expression N COLON M conditional_expression .

    $default  reduce using rule 65 (conditional_expression)


State 337

  192 iteration_statement: DO M statement WHILE RND_OPEN M expression N . RND_CLOSE SEMICOLON

    RND_CLOSE  shift, and go to state 341


State 338

  189 selection_statement: IF RND_OPEN expression N RND_CLOSE M statement N . ELSE M statement

    ELSE  shift, and go to state 342


State 339

  193 iteration_statement: FOR RND_OPEN expression_opt SEMICOLON M expression_opt N SEMICOLON . M expression_opt N RND_CLOSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 343


State 340

  191 iteration_statement: WHILE RND_OPEN M expression N RND_CLOSE M statement .

    $default  reduce using rule 191 (iteration_statement)


State 341

  192 iteration_statement: DO M statement WHILE RND_OPEN M expression N RND_CLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 344


State 342

  189 selection_statement: IF RND_OPEN expression N RND_CLOSE M statement N ELSE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 345


State 343

  193 iteration_statement: FOR RND_OPEN expression_opt SEMICOLON M expression_opt N SEMICOLON M . expression_opt N RND_CLOSE M statement

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 81
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 182
    expression_opt             go to state 346


State 344

  192 iteration_statement: DO M statement WHILE RND_OPEN M expression N RND_CLOSE SEMICOLON .

    $default  reduce using rule 192 (iteration_statement)


State 345

  189 selection_statement: IF RND_OPEN expression N RND_CLOSE M statement N ELSE M . statement

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 103
    BREAK               shift, and go to state 170
    CASE                shift, and go to state 171
    CONTINUE            shift, and go to state 172
    DEFAULT             shift, and go to state 173
    DO                  shift, and go to state 174
    IF                  shift, and go to state 175
    FOR                 shift, and go to state 176
    GOTO                shift, and go to state 177
    WHILE               shift, and go to state 178
    SWITCH              shift, and go to state 179
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    RETURN              shift, and go to state 180
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 181
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 182
    statement                  go to state 347
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 346

  193 iteration_statement: FOR RND_OPEN expression_opt SEMICOLON M expression_opt N SEMICOLON M expression_opt . N RND_CLOSE M statement

    $default  reduce using rule 2 (N)

    N  go to state 348


State 347

  189 selection_statement: IF RND_OPEN expression N RND_CLOSE M statement N ELSE M statement .

    $default  reduce using rule 189 (selection_statement)


State 348

  193 iteration_statement: FOR RND_OPEN expression_opt SEMICOLON M expression_opt N SEMICOLON M expression_opt N . RND_CLOSE M statement

    RND_CLOSE  shift, and go to state 349


State 349

  193 iteration_statement: FOR RND_OPEN expression_opt SEMICOLON M expression_opt N SEMICOLON M expression_opt N RND_CLOSE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 350


State 350

  193 iteration_statement: FOR RND_OPEN expression_opt SEMICOLON M expression_opt N SEMICOLON M expression_opt N RND_CLOSE M . statement

    INC                 shift, and go to state 69
    DEC                 shift, and go to state 70
    AMP                 shift, and go to state 71
    RND_OPEN            shift, and go to state 72
    CUR_OPEN            shift, and go to state 103
    BREAK               shift, and go to state 170
    CASE                shift, and go to state 171
    CONTINUE            shift, and go to state 172
    DEFAULT             shift, and go to state 173
    DO                  shift, and go to state 174
    IF                  shift, and go to state 175
    FOR                 shift, and go to state 176
    GOTO                shift, and go to state 177
    WHILE               shift, and go to state 178
    SWITCH              shift, and go to state 179
    SIZEOF              shift, and go to state 74
    MUL                 shift, and go to state 75
    ADD                 shift, and go to state 76
    SUB                 shift, and go to state 77
    NEG                 shift, and go to state 78
    EXC                 shift, and go to state 79
    RETURN              shift, and go to state 180
    STRING_LITERAL      shift, and go to state 80
    IDENTIFIER          shift, and go to state 181
    FLOATING_CONSTANT   shift, and go to state 82
    CHARACTER_CONSTANT  shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84

    $default  reduce using rule 187 (expression_opt)

    primary_expression         go to state 85
    postfix_expression         go to state 86
    unary_expression           go to state 87
    unary_operator             go to state 88
    cast_expression            go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    conditional_expression     go to state 100
    assignment_expression      go to state 115
    expression                 go to state 182
    statement                  go to state 351
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 189
    expression_opt             go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    jump_statement             go to state 193


State 351

  193 iteration_statement: FOR RND_OPEN expression_opt SEMICOLON M expression_opt N SEMICOLON M expression_opt N RND_CLOSE M statement .

    $default  reduce using rule 193 (iteration_statement)
